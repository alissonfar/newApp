{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState } from 'react';\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose\n}) => {\n  _s();\n  // Estados dos dados gerais da transação\n  const [descricao, setDescricao] = useState('');\n  const [data, setData] = useState('');\n  const [valorTotal, setValorTotal] = useState('');\n\n  // Estados para seleção global de tags\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de tags selecionadas\n  const [globalTags, setGlobalTags] = useState({});\n\n  // Estados para pagamentos (sub-transações)\n  const [pagamentos, setPagamentos] = useState([{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  } // Inicialmente, um pagamento\n  ]);\n\n  // Carregar categorias e tags do backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        // Inicializa o objeto globalTags com cada categoria como chave e array vazio\n        const initGlobal = {};\n        cats.forEach(cat => {\n          initGlobal[cat.nome] = [];\n        });\n        setGlobalTags(initGlobal);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Função para agrupar as tags por categoria\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        const catKey = tag.categoria;\n        if (!acc[catKey]) {\n          acc[catKey] = [];\n        }\n        acc[catKey].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n\n  // Funções para atualizar a seleção global de tags\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\n    // selectedOptions é um array de valores selecionados\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: selectedOptions\n    }));\n  };\n\n  // Funções para gerenciar pagamentos (sub-transações)\n  const handlePagamentoChange = (index, field, value) => {\n    const novosPagamentos = [...pagamentos];\n    novosPagamentos[index][field] = value;\n    setPagamentos(novosPagamentos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    const novosPagamentos = [...pagamentos];\n    if (!novosPagamentos[index].paymentTags) {\n      novosPagamentos[index].paymentTags = {};\n    }\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\n    setPagamentos(novosPagamentos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novosPagamentos);\n  };\n\n  // Função para validar a soma dos pagamentos\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pagamento) => acc + parseFloat(pagamento.valor || 0), 0);\n    return parseFloat(valorTotal) === soma;\n  };\n\n  // Função para submeter o formulário\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const novaTransacao = {\n      descricao,\n      data,\n      valor: parseFloat(valorTotal),\n      tags: globalTags,\n      // Envia um objeto com as tags globais por categoria\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: parseFloat(pag.valor),\n        tags: pag.paymentTags // Também um objeto por categoria\n      }))\n    };\n    try {\n      await criarTransacao(novaTransacao);\n      alert('Transação criada com sucesso!');\n      if (onSuccess) onSuccess();\n      onClose();\n    } catch (error) {\n      console.error('Erro ao criar transação:', error);\n      alert('Erro ao criar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: descricao,\n          onChange: e => setDescricao(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: data,\n          onChange: e => setData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Valor Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: valorTotal,\n          onChange: e => setValorTotal(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section global-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selecione Tags Globais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag-dropdown-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [cat.nome, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: globalTags[cat.nome] || [],\n            onChange: e => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              handleGlobalTagChange(cat.nome, selected);\n            },\n            children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag.nome,\n              children: tag.nome\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, cat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section pagamentos-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pagamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagamento-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pessoa:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: pagamento.pessoa,\n            onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            value: pagamento.valor,\n            onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags para este Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag-dropdown-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [cat.nome, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                multiple: true,\n                value: pagamento.paymentTags && pagamento.paymentTags[cat.nome] || [],\n                onChange: e => {\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\n                  handlePagamentoTagChange(index, cat.nome, selected);\n                },\n                children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tag.nome,\n                  children: tag.nome\n                }, tag.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this)]\n            }, cat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removePagamento(index),\n            children: \"Remover Pagamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPagamento,\n          children: \"Adicionar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Salvar Transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"0GSIzcJ1d/zQIK3P5Ti2203Z5J8=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","criarTransacao","obterCategorias","obterTags","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","_s","descricao","setDescricao","data","setData","valorTotal","setValorTotal","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","pessoa","valor","paymentTags","fetchData","cats","initGlobal","forEach","cat","nome","tgs","error","console","getTagsByCategory","reduce","acc","tag","categoria","catKey","push","tagsPorCategoria","handleGlobalTagChange","selectedOptions","prev","handlePagamentoChange","index","field","value","novosPagamentos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pagamento","parseFloat","handleSubmit","e","preventDefault","alert","novaTransacao","map","pag","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","required","step","multiple","selected","Array","from","option","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose }) => {\r\n  // Estados dos dados gerais da transação\r\n  const [descricao, setDescricao] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [valorTotal, setValorTotal] = useState('');\r\n\r\n  // Estados para seleção global de tags\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de tags selecionadas\r\n  const [globalTags, setGlobalTags] = useState({});\r\n\r\n  // Estados para pagamentos (sub-transações)\r\n  const [pagamentos, setPagamentos] = useState([\r\n    { pessoa: '', valor: '', paymentTags: {} }  // Inicialmente, um pagamento\r\n  ]);\r\n\r\n  // Carregar categorias e tags do backend\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        // Inicializa o objeto globalTags com cada categoria como chave e array vazio\r\n        const initGlobal = {};\r\n        cats.forEach(cat => {\r\n          initGlobal[cat.nome] = [];\r\n        });\r\n        setGlobalTags(initGlobal);\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função para agrupar as tags por categoria\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        const catKey = tag.categoria;\r\n        if (!acc[catKey]) {\r\n          acc[catKey] = [];\r\n        }\r\n        acc[catKey].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const tagsPorCategoria = getTagsByCategory();\r\n\r\n  // Funções para atualizar a seleção global de tags\r\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\r\n    // selectedOptions é um array de valores selecionados\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: selectedOptions\r\n    }));\r\n  };\r\n\r\n  // Funções para gerenciar pagamentos (sub-transações)\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    novosPagamentos[index][field] = value;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    if (!novosPagamentos[index].paymentTags) {\r\n      novosPagamentos[index].paymentTags = {};\r\n    }\r\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  // Função para validar a soma dos pagamentos\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pagamento) => acc + parseFloat(pagamento.valor || 0), 0);\r\n    return parseFloat(valorTotal) === soma;\r\n  };\r\n\r\n  // Função para submeter o formulário\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const novaTransacao = {\r\n      descricao,\r\n      data,\r\n      valor: parseFloat(valorTotal),\r\n      tags: globalTags,  // Envia um objeto com as tags globais por categoria\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: parseFloat(pag.valor),\r\n        tags: pag.paymentTags  // Também um objeto por categoria\r\n      }))\r\n    };\r\n    try {\r\n      await criarTransacao(novaTransacao);\r\n      alert('Transação criada com sucesso!');\r\n      if (onSuccess) onSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Erro ao criar transação:', error);\r\n      alert('Erro ao criar transação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>Nova Transação</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-section\">\r\n          <label>Descrição:</label>\r\n          <input type=\"text\" value={descricao} onChange={e => setDescricao(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <label>Data:</label>\r\n          <input type=\"date\" value={data} onChange={e => setData(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <label>Valor Total:</label>\r\n          <input type=\"number\" step=\"0.01\" value={valorTotal} onChange={e => setValorTotal(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section global-tags\">\r\n          <h3>Selecione Tags Globais</h3>\r\n          {categorias.map(cat => (\r\n            <div key={cat.id} className=\"tag-dropdown-group\">\r\n              <label>{cat.nome}:</label>\r\n              <select multiple\r\n                value={globalTags[cat.nome] || []}\r\n                onChange={e => {\r\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                  handleGlobalTagChange(cat.nome, selected);\r\n                }}\r\n              >\r\n                {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                  <option key={tag.id} value={tag.nome}>\r\n                    {tag.nome}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"form-section pagamentos-section\">\r\n          <h3>Pagamentos</h3>\r\n          {pagamentos.map((pagamento, index) => (\r\n            <div key={index} className=\"pagamento-item\">\r\n              <label>Pessoa:</label>\r\n              <input type=\"text\" value={pagamento.pessoa} onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)} required />\r\n              <label>Valor:</label>\r\n              <input type=\"number\" step=\"0.01\" value={pagamento.valor} onChange={e => handlePagamentoChange(index, 'valor', e.target.value)} required />\r\n              <div className=\"payment-tags\">\r\n                <h4>Tags para este Pagamento</h4>\r\n                {categorias.map(cat => (\r\n                  <div key={cat.id} className=\"tag-dropdown-group\">\r\n                    <label>{cat.nome}:</label>\r\n                    <select multiple\r\n                      value={(pagamento.paymentTags && pagamento.paymentTags[cat.nome]) || []}\r\n                      onChange={e => {\r\n                        const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                        handlePagamentoTagChange(index, cat.nome, selected);\r\n                      }}\r\n                    >\r\n                      {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                        <option key={tag.id} value={tag.nome}>\r\n                          {tag.nome}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button type=\"button\" onClick={() => removePagamento(index)}>Remover Pagamento</button>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">Salvar Transação</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}