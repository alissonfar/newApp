{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\pages\\\\Transacoes\\\\Transacoes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { obterTransacoes, excluirTransacao } from '../../api';\nimport TransactionCardTransacoes from '../../components/Transaction/TransactionCardTransacoes';\nimport NovaTransacaoForm from '../../components/Transaction/NovaTransacaoForm';\nimport ModalTransacao from '../../components/Modal/ModalTransacao';\nimport './Transacoes.css';\n\n/**\r\n * Extrai \"YYYY-MM-DD\" de uma string ISO (ex: \"2025-03-01T00:00:00.000Z\"),\r\n * converte para objeto Date *sem* fuso (new Date(year, monthIndex, day)),\r\n * e retorna esse objeto para fins de comparação (ordenar).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction parseDateIgnoringTimeZone(isoString) {\n  // isoString: \"2025-03-01T00:00:00.000Z\" -> parte \"2025-03-01\"\n  const onlyDate = isoString.split('T')[0]; // \"2025-03-01\"\n  const [year, month, day] = onlyDate.split('-').map(Number);\n  // year=2025, month=3, day=1\n  // new Date(2025, 2, 1) => 1º de março de 2025 (sem offset)\n  return new Date(year, month - 1, day);\n}\n\n/**\r\n * Apenas formata a parte \"YYYY-MM-DD\" em \"dd/mm/yyyy\",\r\n * sem usar new Date(...) (nem fuso, nem nada).\r\n */\nfunction formatDateDDMMYYYY(isoString) {\n  // isoString: \"2025-03-01T00:00:00.000Z\" -> parte \"2025-03-01\"\n  const onlyDate = isoString.split('T')[0]; // \"2025-03-01\"\n  const [year, month, day] = onlyDate.split('-');\n  return `${day}/${month}/${year}`; // \"01/03/2025\"\n}\nconst Transacoes = () => {\n  _s();\n  const [transacoes, setTransacoes] = useState([]);\n  const [filteredTransacoes, setFilteredTransacoes] = useState([]);\n\n  // Filtros\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filterType, setFilterType] = useState('todos');\n\n  // Ordenação\n  const [orderOption, setOrderOption] = useState('mais-recentes');\n  // Opções: mais-recentes, mais-antigos, valor-crescente, valor-decrescente\n\n  // Edição/Criação\n  const [editingTransacao, setEditingTransacao] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n\n  // Carrega todas as transações do backend\n  const carregarTransacoes = async () => {\n    try {\n      const dados = await obterTransacoes();\n      // Ordena por data desc inicialmente (padrão), ignorando time zone\n      let lista = (dados.transacoes || []).sort((a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data));\n\n      // Adiciona \"dataFormatada\" para exibir dd/mm/yyyy\n      lista = lista.map(tr => ({\n        ...tr,\n        dataFormatada: formatDateDDMMYYYY(tr.data)\n      }));\n      setTransacoes(lista);\n      setFilteredTransacoes(lista);\n    } catch (error) {\n      console.error('Erro ao carregar transações:', error);\n    }\n  };\n  useEffect(() => {\n    carregarTransacoes();\n  }, []);\n\n  // Filtro e Ordenação: busca por descrição, pessoa, tags e ordena conforme orderOption\n  useEffect(() => {\n    let resultado = [...transacoes];\n\n    // 1) Filtro de busca\n    if (searchTerm.trim()) {\n      const search = searchTerm.toLowerCase();\n      resultado = resultado.filter(tr => {\n        const matchDescricao = tr.descricao.toLowerCase().includes(search);\n        const matchPagamentos = tr.pagamentos && tr.pagamentos.some(pg => {\n          const matchPessoa = pg.pessoa && pg.pessoa.toLowerCase().includes(search);\n          const matchTags = Object.keys(pg.paymentTags || {}).some(cat => pg.paymentTags[cat].some(tag => tag.toLowerCase().includes(search)));\n          return matchPessoa || matchTags;\n        });\n        return matchDescricao || matchPagamentos;\n      });\n    }\n\n    // 2) Filtro de tipo\n    if (filterType !== 'todos') {\n      resultado = resultado.filter(tr => tr.tipo === filterType);\n    }\n\n    // 3) Ordenação\n    switch (orderOption) {\n      case 'mais-recentes':\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data));\n        break;\n      case 'mais-antigos':\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(a.data) - parseDateIgnoringTimeZone(b.data));\n        break;\n      case 'valor-crescente':\n        resultado.sort((a, b) => a.valor - b.valor);\n        break;\n      case 'valor-decrescente':\n        resultado.sort((a, b) => b.valor - a.valor);\n        break;\n      default:\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data));\n        break;\n    }\n\n    // Atualiza \"dataFormatada\" novamente após a ordenação/filtragem\n    resultado = resultado.map(tr => ({\n      ...tr,\n      dataFormatada: formatDateDDMMYYYY(tr.data)\n    }));\n    setFilteredTransacoes(resultado);\n  }, [searchTerm, filterType, transacoes, orderOption]);\n\n  // Editar transação\n  const handleEdit = transacao => {\n    setEditingTransacao(transacao);\n    setModalOpen(true);\n  };\n\n  // Criar nova transação\n  const handleCreate = () => {\n    setEditingTransacao(null);\n    setModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setEditingTransacao(null);\n    setModalOpen(false);\n  };\n\n  // Ao salvar/atualizar transação\n  const handleSuccess = () => {\n    handleCloseModal();\n    carregarTransacoes();\n  };\n\n  // Excluir\n  const handleDelete = async id => {\n    if (window.confirm('Tem certeza que deseja excluir esta transação?')) {\n      try {\n        await excluirTransacao(id);\n        alert('Transação excluída com sucesso!');\n        carregarTransacoes();\n      } catch (error) {\n        console.error('Erro ao excluir transação:', error);\n        alert('Erro ao excluir transação.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"transacoes-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transa\\xE7\\xF5es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transacoes-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Buscar por descri\\xE7\\xE3o, pessoa ou tags...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterType,\n        onChange: e => setFilterType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"todos\",\n          children: \"Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"gasto\",\n          children: \"Gasto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"recebivel\",\n          children: \"Receb\\xEDvel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: orderOption,\n        onChange: e => setOrderOption(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mais-recentes\",\n          children: \"Lan\\xE7amentos mais recentes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mais-antigos\",\n          children: \"Lan\\xE7amentos mais antigos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"valor-crescente\",\n          children: \"Valor total crescente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"valor-decrescente\",\n          children: \"Valor total decrescente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreate,\n        children: \"+ Nova Transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transacoes-list\",\n      children: filteredTransacoes.length > 0 ? filteredTransacoes.map(tr => /*#__PURE__*/_jsxDEV(TransactionCardTransacoes, {\n        transacao: tr,\n        onEdit: handleEdit,\n        onDelete: handleDelete\n      }, tr.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhuma transa\\xE7\\xE3o encontrada.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), modalpen && /*#__PURE__*/_jsxDEV(ModalTransacao, {\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(NovaTransacaoForm, {\n        transacao: editingTransacao,\n        onSuccess: handleSuccess,\n        onClose: handleCloseModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(Transacoes, \"Q9NEEFWUIcO1IIQvN0j9CWVcxug=\");\n_c = Transacoes;\nexport default Transacoes;\nvar _c;\n$RefreshReg$(_c, \"Transacoes\");","map":{"version":3,"names":["React","useEffect","useState","obterTransacoes","excluirTransacao","TransactionCardTransacoes","NovaTransacaoForm","ModalTransacao","jsxDEV","_jsxDEV","parseDateIgnoringTimeZone","isoString","onlyDate","split","year","month","day","map","Number","Date","formatDateDDMMYYYY","Transacoes","_s","transacoes","setTransacoes","filteredTransacoes","setFilteredTransacoes","searchTerm","setSearchTerm","filterType","setFilterType","orderOption","setOrderOption","editingTransacao","setEditingTransacao","modalOpen","setModalOpen","carregarTransacoes","dados","lista","sort","a","b","data","tr","dataFormatada","error","console","resultado","trim","search","toLowerCase","filter","matchDescricao","descricao","includes","matchPagamentos","pagamentos","some","pg","matchPessoa","pessoa","matchTags","Object","keys","paymentTags","cat","tag","tipo","valor","handleEdit","transacao","handleCreate","handleCloseModal","handleSuccess","handleDelete","id","window","confirm","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","length","onEdit","onDelete","modalpen","onClose","onSuccess","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/pages/Transacoes/Transacoes.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { obterTransacoes, excluirTransacao } from '../../api';\r\nimport TransactionCardTransacoes from '../../components/Transaction/TransactionCardTransacoes';\r\nimport NovaTransacaoForm from '../../components/Transaction/NovaTransacaoForm';\r\nimport ModalTransacao from '../../components/Modal/ModalTransacao';\r\nimport './Transacoes.css';\r\n\r\n/**\r\n * Extrai \"YYYY-MM-DD\" de uma string ISO (ex: \"2025-03-01T00:00:00.000Z\"),\r\n * converte para objeto Date *sem* fuso (new Date(year, monthIndex, day)),\r\n * e retorna esse objeto para fins de comparação (ordenar).\r\n */\r\nfunction parseDateIgnoringTimeZone(isoString) {\r\n  // isoString: \"2025-03-01T00:00:00.000Z\" -> parte \"2025-03-01\"\r\n  const onlyDate = isoString.split('T')[0]; // \"2025-03-01\"\r\n  const [year, month, day] = onlyDate.split('-').map(Number); \r\n  // year=2025, month=3, day=1\r\n  // new Date(2025, 2, 1) => 1º de março de 2025 (sem offset)\r\n  return new Date(year, month - 1, day);\r\n}\r\n\r\n/**\r\n * Apenas formata a parte \"YYYY-MM-DD\" em \"dd/mm/yyyy\",\r\n * sem usar new Date(...) (nem fuso, nem nada).\r\n */\r\nfunction formatDateDDMMYYYY(isoString) {\r\n  // isoString: \"2025-03-01T00:00:00.000Z\" -> parte \"2025-03-01\"\r\n  const onlyDate = isoString.split('T')[0]; // \"2025-03-01\"\r\n  const [year, month, day] = onlyDate.split('-');\r\n  return `${day}/${month}/${year}`; // \"01/03/2025\"\r\n}\r\n\r\nconst Transacoes = () => {\r\n  const [transacoes, setTransacoes] = useState([]);\r\n  const [filteredTransacoes, setFilteredTransacoes] = useState([]);\r\n  \r\n  // Filtros\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filterType, setFilterType] = useState('todos');\r\n  \r\n  // Ordenação\r\n  const [orderOption, setOrderOption] = useState('mais-recentes'); \r\n  // Opções: mais-recentes, mais-antigos, valor-crescente, valor-decrescente\r\n  \r\n  // Edição/Criação\r\n  const [editingTransacao, setEditingTransacao] = useState(null);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // Carrega todas as transações do backend\r\n  const carregarTransacoes = async () => {\r\n    try {\r\n      const dados = await obterTransacoes();\r\n      // Ordena por data desc inicialmente (padrão), ignorando time zone\r\n      let lista = (dados.transacoes || []).sort(\r\n        (a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data)\r\n      );\r\n\r\n      // Adiciona \"dataFormatada\" para exibir dd/mm/yyyy\r\n      lista = lista.map(tr => ({\r\n        ...tr,\r\n        dataFormatada: formatDateDDMMYYYY(tr.data)\r\n      }));\r\n\r\n      setTransacoes(lista);\r\n      setFilteredTransacoes(lista);\r\n    } catch (error) {\r\n      console.error('Erro ao carregar transações:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    carregarTransacoes();\r\n  }, []);\r\n\r\n  // Filtro e Ordenação: busca por descrição, pessoa, tags e ordena conforme orderOption\r\n  useEffect(() => {\r\n    let resultado = [...transacoes];\r\n\r\n    // 1) Filtro de busca\r\n    if (searchTerm.trim()) {\r\n      const search = searchTerm.toLowerCase();\r\n      resultado = resultado.filter(tr => {\r\n        const matchDescricao = tr.descricao.toLowerCase().includes(search);\r\n        const matchPagamentos = tr.pagamentos && tr.pagamentos.some(pg => {\r\n          const matchPessoa = pg.pessoa && pg.pessoa.toLowerCase().includes(search);\r\n          const matchTags = Object.keys(pg.paymentTags || {}).some(cat =>\r\n            pg.paymentTags[cat].some(tag => tag.toLowerCase().includes(search))\r\n          );\r\n          return matchPessoa || matchTags;\r\n        });\r\n        return matchDescricao || matchPagamentos;\r\n      });\r\n    }\r\n\r\n    // 2) Filtro de tipo\r\n    if (filterType !== 'todos') {\r\n      resultado = resultado.filter(tr => tr.tipo === filterType);\r\n    }\r\n\r\n    // 3) Ordenação\r\n    switch (orderOption) {\r\n      case 'mais-recentes':\r\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data));\r\n        break;\r\n      case 'mais-antigos':\r\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(a.data) - parseDateIgnoringTimeZone(b.data));\r\n        break;\r\n      case 'valor-crescente':\r\n        resultado.sort((a, b) => a.valor - b.valor);\r\n        break;\r\n      case 'valor-decrescente':\r\n        resultado.sort((a, b) => b.valor - a.valor);\r\n        break;\r\n      default:\r\n        resultado.sort((a, b) => parseDateIgnoringTimeZone(b.data) - parseDateIgnoringTimeZone(a.data));\r\n        break;\r\n    }\r\n\r\n    // Atualiza \"dataFormatada\" novamente após a ordenação/filtragem\r\n    resultado = resultado.map(tr => ({\r\n      ...tr,\r\n      dataFormatada: formatDateDDMMYYYY(tr.data)\r\n    }));\r\n\r\n    setFilteredTransacoes(resultado);\r\n  }, [searchTerm, filterType, transacoes, orderOption]);\r\n\r\n  // Editar transação\r\n  const handleEdit = (transacao) => {\r\n    setEditingTransacao(transacao);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  // Criar nova transação\r\n  const handleCreate = () => {\r\n    setEditingTransacao(null);\r\n    setModalOpen(true);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setEditingTransacao(null);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  // Ao salvar/atualizar transação\r\n  const handleSuccess = () => {\r\n    handleCloseModal();\r\n    carregarTransacoes();\r\n  };\r\n\r\n  // Excluir\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Tem certeza que deseja excluir esta transação?')) {\r\n      try {\r\n        await excluirTransacao(id);\r\n        alert('Transação excluída com sucesso!');\r\n        carregarTransacoes();\r\n      } catch (error) {\r\n        console.error('Erro ao excluir transação:', error);\r\n        alert('Erro ao excluir transação.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"transacoes-container\">\r\n      <h2>Transações</h2>\r\n      {/* Barra de Filtros */}\r\n      <div className=\"transacoes-filters\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Buscar por descrição, pessoa ou tags...\"\r\n          value={searchTerm}\r\n          onChange={e => setSearchTerm(e.target.value)}\r\n        />\r\n        <select\r\n          value={filterType}\r\n          onChange={e => setFilterType(e.target.value)}\r\n        >\r\n          <option value=\"todos\">Todos</option>\r\n          <option value=\"gasto\">Gasto</option>\r\n          <option value=\"recebivel\">Recebível</option>\r\n        </select>\r\n        <select\r\n          value={orderOption}\r\n          onChange={e => setOrderOption(e.target.value)}\r\n        >\r\n          <option value=\"mais-recentes\">Lançamentos mais recentes</option>\r\n          <option value=\"mais-antigos\">Lançamentos mais antigos</option>\r\n          <option value=\"valor-crescente\">Valor total crescente</option>\r\n          <option value=\"valor-decrescente\">Valor total decrescente</option>\r\n        </select>\r\n        <button onClick={handleCreate}>+ Nova Transação</button>\r\n      </div>\r\n\r\n      {/* Lista de Transações */}\r\n      <div className=\"transacoes-list\">\r\n        {filteredTransacoes.length > 0 ? (\r\n          filteredTransacoes.map(tr => (\r\n            <TransactionCardTransacoes\r\n              key={tr.id}\r\n              transacao={tr}\r\n              onEdit={handleEdit}\r\n              onDelete={handleDelete}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>Nenhuma transação encontrada.</p>\r\n        )}\r\n      </div>\r\n\r\n      {modalpen && (\r\n        <ModalTransacao onClose={handleCloseModal}>\r\n          <NovaTransacaoForm\r\n            transacao={editingTransacao}\r\n            onSuccess={handleSuccess}\r\n            onClose={handleCloseModal}\r\n          />\r\n        </ModalTransacao>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Transacoes;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}