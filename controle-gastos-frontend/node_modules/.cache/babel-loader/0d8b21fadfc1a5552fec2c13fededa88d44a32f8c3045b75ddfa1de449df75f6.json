{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose,\n  transacao\n}) => {\n  _s();\n  // Estados para campos\n  const [tipo, setTipo] = useState('gasto');\n  const [descricao, setDescricao] = useState('');\n  const [data, setData] = useState('');\n  const [valorTotal, setValorTotal] = useState('');\n\n  // Tags e categorias\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [globalTags, setGlobalTags] = useState({});\n\n  // Pagamentos\n  const [pagamentos, setPagamentos] = useState([{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\n  const descricaoRef = useRef(null);\n\n  // useEffect para carregar dados do backend (categorias, tags)\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // useEffect para “escutar” transacao e preencher os campos\n  useEffect(() => {\n    if (transacao) {\n      setTipo(transacao.tipo);\n      setDescricao(transacao.descricao);\n      // Garantir que a data seja formatada (YYYY-MM-DD)\n      const dataStr = transacao.data.split('T')[0];\n      setData(dataStr);\n      setValorTotal(String(transacao.valor));\n\n      // Carregar tags globais\n      if (transacao.tags) {\n        setGlobalTags(transacao.tags);\n      } else {\n        setGlobalTags({});\n      }\n\n      // Carregar pagamentos\n      if (transacao.pagamentos && transacao.pagamentos.length > 0) {\n        setPagamentos(transacao.pagamentos);\n      } else {\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n      }\n    } else {\n      // Nova transação: resetar os campos\n      setTipo('gasto');\n      setDescricao('');\n      const hoje = new Date().toISOString().split('T')[0];\n      setData(hoje);\n      setValorTotal('');\n      setGlobalTags({});\n      setPagamentos([{\n        pessoa: '',\n        valor: '',\n        paymentTags: {}\n      }]);\n    }\n  }, [transacao]);\n\n  // Agrupa as tags por categoria\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        const catKey = tag.categoria;\n        if (!acc[catKey]) {\n          acc[catKey] = [];\n        }\n        acc[catKey].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: selectedOptions\n    }));\n  };\n\n  // Pagamentos\n  const handlePagamentoChange = (index, field, value) => {\n    const novos = [...pagamentos];\n    novos[index][field] = value;\n    setPagamentos(novos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    const novos = [...pagamentos];\n    if (!novos[index].paymentTags) {\n      novos[index].paymentTags = {};\n    }\n    novos[index].paymentTags[categoria] = selectedOptions;\n    setPagamentos(novos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novos);\n  };\n\n  // Validação de soma\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pag) => {\n      const v = parseFloat(pag.valor || 0);\n      return acc + (isNaN(v) ? 0 : v);\n    }, 0);\n    return parseFloat(valorTotal || 0) === soma;\n  };\n\n  // Submit\n  const handleSubmit = async (e, closeModal = true) => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const novaTransacao = {\n      tipo,\n      descricao,\n      data,\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\n      tags: globalTags,\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\n        tags: pag.paymentTags\n      }))\n    };\n    try {\n      if (transacao && transacao.id) {\n        await atualizarTransacao(transacao.id, novaTransacao);\n        alert('Transação atualizada com sucesso!');\n      } else {\n        await criarTransacao(novaTransacao);\n        alert('Transação criada com sucesso!');\n      }\n      if (onSuccess) onSuccess();\n      if (closeModal) {\n        onClose();\n      } else {\n        // Limpa para nova inserção\n        setTipo('gasto');\n        setDescricao('');\n        const hoje = new Date().toISOString().split('T')[0];\n        setData(hoje);\n        setValorTotal('');\n        setGlobalTags({});\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n        descricaoRef.current && descricaoRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Erro ao criar/atualizar transação:', error);\n      alert('Erro ao criar/atualizar transação.');\n    }\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: transacao ? 'Editar Transação' : 'Nova Transação'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tipo,\n              onChange: e => setTipo(e.target.value),\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gasto\",\n                children: \"Gasto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recebivel\",\n                children: \"Receb\\xEDvel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: descricao,\n              onChange: e => setDescricao(e.target.value),\n              required: true,\n              list: \"descricao-suggestions\",\n              ref: descricaoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"descricao-suggestions\",\n              children: descricaoSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sug\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: data,\n              onChange: e => setData(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-shortcuts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setHoje,\n                children: \"Hoje\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setOntem,\n                children: \"Ontem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Valor Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: valorTotal,\n              onChange: e => setValorTotal(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section global-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Tags Globais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag-dropdown-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [cat.nome, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                multiple: true,\n                value: globalTags[cat.nome] || [],\n                onChange: e => {\n                  const selected = Array.from(e.target.selectedOptions, opt => opt.value);\n                  handleGlobalTagChange(cat.nome, selected);\n                },\n                children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tag.nome,\n                  children: tag.nome\n                }, tag.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)]\n            }, cat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section pagamentos-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pagamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagamento-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pessoa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pagamento.pessoa,\n                  onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n                  required: true,\n                  list: \"pessoa-suggestions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"pessoa-suggestions\",\n                  children: pessoaSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sug\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Valor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: pagamento.valor,\n                  onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section payment-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Tags para Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tag-dropdown-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [cat.nome, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    multiple: true,\n                    value: pagamento.paymentTags && pagamento.paymentTags[cat.nome] || [],\n                    onChange: e => {\n                      const selected = Array.from(e.target.selectedOptions, opt => opt.value);\n                      handlePagamentoTagChange(index, cat.nome, selected);\n                    },\n                    children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: tag.nome,\n                      children: tag.nome\n                    }, tag.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this)]\n                }, cat.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removePagamento(index),\n                children: \"Remover\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addPagamento,\n              children: \"Adicionar Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, true),\n          children: transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, false),\n          children: transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"zrzI0WyuWur0hvkD4lpK9V/1aPM=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","criarTransacao","atualizarTransacao","obterCategorias","obterTags","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","transacao","_s","tipo","setTipo","descricao","setDescricao","data","setData","valorTotal","setValorTotal","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","pessoa","valor","paymentTags","descricaoSuggestions","pessoaSuggestions","descricaoRef","fetchData","cats","tgs","error","console","dataStr","split","String","length","hoje","Date","toISOString","getTagsByCategory","reduce","acc","tag","categoria","catKey","push","tagsPorCategoria","handleGlobalTagChange","selectedOptions","prev","handlePagamentoChange","index","field","value","novos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pag","v","parseFloat","isNaN","handleSubmit","e","closeModal","preventDefault","alert","novaTransacao","Number","toFixed","map","id","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","required","type","list","ref","sug","idx","onClick","setHoje","setOntem","step","cat","nome","multiple","selected","Array","from","opt","pagamento","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose, transacao }) => {\r\n\r\n  \r\n  // Estados para campos\r\n  const [tipo, setTipo] = useState('gasto');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [valorTotal, setValorTotal] = useState('');\r\n\r\n  // Tags e categorias\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [globalTags, setGlobalTags] = useState({});\r\n\r\n  // Pagamentos\r\n  const [pagamentos, setPagamentos] = useState([\r\n    { pessoa: '', valor: '', paymentTags: {} }\r\n  ]);\r\n\r\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\r\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\r\n\r\n  const descricaoRef = useRef(null);\r\n\r\n  // useEffect para carregar dados do backend (categorias, tags)\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // useEffect para “escutar” transacao e preencher os campos\r\n  useEffect(() => {\r\n    if (transacao) {\r\n      setTipo(transacao.tipo);\r\n      setDescricao(transacao.descricao);\r\n      // Garantir que a data seja formatada (YYYY-MM-DD)\r\n      const dataStr = transacao.data.split('T')[0];\r\n      setData(dataStr);\r\n      setValorTotal(String(transacao.valor));\r\n\r\n      // Carregar tags globais\r\n      if (transacao.tags) {\r\n        setGlobalTags(transacao.tags);\r\n      } else {\r\n        setGlobalTags({});\r\n      }\r\n\r\n      // Carregar pagamentos\r\n      if (transacao.pagamentos && transacao.pagamentos.length > 0) {\r\n        setPagamentos(transacao.pagamentos);\r\n      } else {\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n      }\r\n    } else {\r\n      // Nova transação: resetar os campos\r\n      setTipo('gasto');\r\n      setDescricao('');\r\n      const hoje = new Date().toISOString().split('T')[0];\r\n      setData(hoje);\r\n      setValorTotal('');\r\n      setGlobalTags({});\r\n      setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n    }\r\n  }, [transacao]);\r\n\r\n  // Agrupa as tags por categoria\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        const catKey = tag.categoria;\r\n        if (!acc[catKey]) {\r\n          acc[catKey] = [];\r\n        }\r\n        acc[catKey].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n  const tagsPorCategoria = getTagsByCategory();\r\n\r\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: selectedOptions\r\n    }));\r\n  };\r\n\r\n  // Pagamentos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novos = [...pagamentos];\r\n    novos[index][field] = value;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    const novos = [...pagamentos];\r\n    if (!novos[index].paymentTags) {\r\n      novos[index].paymentTags = {};\r\n    }\r\n    novos[index].paymentTags[categoria] = selectedOptions;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  // Validação de soma\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pag) => {\r\n      const v = parseFloat(pag.valor || 0);\r\n      return acc + (isNaN(v) ? 0 : v);\r\n    }, 0);\r\n    return parseFloat(valorTotal || 0) === soma;\r\n  };\r\n\r\n  // Submit\r\n  const handleSubmit = async (e, closeModal = true) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const novaTransacao = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\r\n      tags: globalTags,\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\r\n        tags: pag.paymentTags\r\n      }))\r\n    };\r\n    try {\r\n      if (transacao && transacao.id) {\r\n        await atualizarTransacao(transacao.id, novaTransacao);\r\n        alert('Transação atualizada com sucesso!');\r\n      } else {\r\n        await criarTransacao(novaTransacao);\r\n        alert('Transação criada com sucesso!');\r\n      }\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) {\r\n        onClose();\r\n      } else {\r\n        // Limpa para nova inserção\r\n        setTipo('gasto');\r\n        setDescricao('');\r\n        const hoje = new Date().toISOString().split('T')[0];\r\n        setData(hoje);\r\n        setValorTotal('');\r\n        setGlobalTags({});\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n        descricaoRef.current && descricaoRef.current.focus();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao criar/atualizar transação:', error);\r\n      alert('Erro ao criar/atualizar transação.');\r\n    }\r\n  };\r\n\r\n  // Render\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>{transacao ? 'Editar Transação' : 'Nova Transação'}</h2>\r\n      <form onSubmit={(e) => handleSubmit(e, true)}>\r\n        <div className=\"form-grid\">\r\n          <div className=\"left-column\">\r\n            <div className=\"form-section\">\r\n              <label>Tipo:</label>\r\n              <select\r\n                value={tipo}\r\n                onChange={e => setTipo(e.target.value)}\r\n                required\r\n              >\r\n                <option value=\"gasto\">Gasto</option>\r\n                <option value=\"recebivel\">Recebível</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Descrição:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={descricao}\r\n                onChange={e => setDescricao(e.target.value)}\r\n                required\r\n                list=\"descricao-suggestions\"\r\n                ref={descricaoRef}\r\n              />\r\n              <datalist id=\"descricao-suggestions\">\r\n                {descricaoSuggestions.map((sug, idx) => (\r\n                  <option key={idx} value={sug} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Data:</label>\r\n              <input\r\n                type=\"date\"\r\n                value={data}\r\n                onChange={e => setData(e.target.value)}\r\n                required\r\n              />\r\n              <div className=\"date-shortcuts\">\r\n                <button type=\"button\" onClick={setHoje}>Hoje</button>\r\n                <button type=\"button\" onClick={setOntem}>Ontem</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Valor Total:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={valorTotal}\r\n                onChange={e => setValorTotal(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"right-column\">\r\n            <div className=\"form-section global-tags\">\r\n              <h3>Tags Globais</h3>\r\n              {categorias.map(cat => (\r\n                <div key={cat.id} className=\"tag-dropdown-group\">\r\n                  <label>{cat.nome}:</label>\r\n                  <select\r\n                    multiple\r\n                    value={globalTags[cat.nome] || []}\r\n                    onChange={e => {\r\n                      const selected = Array.from(e.target.selectedOptions, opt => opt.value);\r\n                      handleGlobalTagChange(cat.nome, selected);\r\n                    }}\r\n                  >\r\n                    {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                      <option key={tag.id} value={tag.nome}>\r\n                        {tag.nome}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"form-section pagamentos-section\">\r\n              <h3>Pagamentos</h3>\r\n              {pagamentos.map((pagamento, index) => (\r\n                <div key={index} className=\"pagamento-item\">\r\n                  <div className=\"form-section\">\r\n                    <label>Pessoa:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={pagamento.pessoa}\r\n                      onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)}\r\n                      required\r\n                      list=\"pessoa-suggestions\"\r\n                    />\r\n                    <datalist id=\"pessoa-suggestions\">\r\n                      {pessoaSuggestions.map((sug, idx) => (\r\n                        <option key={idx} value={sug} />\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <label>Valor:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={pagamento.valor}\r\n                      onChange={e => handlePagamentoChange(index, 'valor', e.target.value)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-section payment-tags\">\r\n                    <h4>Tags para Pagamento</h4>\r\n                    {categorias.map(cat => (\r\n                      <div key={cat.id} className=\"tag-dropdown-group\">\r\n                        <label>{cat.nome}:</label>\r\n                        <select\r\n                          multiple\r\n                          value={(pagamento.paymentTags && pagamento.paymentTags[cat.nome]) || []}\r\n                          onChange={e => {\r\n                            const selected = Array.from(e.target.selectedOptions, opt => opt.value);\r\n                            handlePagamentoTagChange(index, cat.nome, selected);\r\n                          }}\r\n                        >\r\n                          {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                            <option key={tag.id} value={tag.nome}>\r\n                              {tag.nome}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removePagamento(index)}>\r\n                    Remover\r\n                  </button>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form-buttons\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-btn\"\r\n            onClick={(e) => handleSubmit(e, true)}\r\n          >\r\n            {transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-btn\"\r\n            onClick={(e) => handleSubmit(e, false)}\r\n          >\r\n            {transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}