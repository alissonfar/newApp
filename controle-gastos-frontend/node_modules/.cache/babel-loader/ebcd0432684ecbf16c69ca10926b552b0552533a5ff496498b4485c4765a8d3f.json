{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose,\n  transacao\n}) => {\n  _s();\n  // Campos da transação (pai)\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\n  const [valorTotal, setValorTotal] = useState(transacao ? String(transacao.valor) : '');\n\n  // Removemos o campo de tags do pai\n\n  // Pagamentos (cada pagamento terá tags associadas)\n  const [pagamentos, setPagamentos] = useState(transacao && transacao.pagamentos && transacao.pagamentos.length > 0 ? transacao.pagamentos : [{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\n\n  // Categorias e tags do backend (para os pagamentos)\n  const [categorias, setCategorias] = useState([]);\n  const [allTags, setAllTags] = useState([]);\n\n  // Refs para facilitar o foco\n  const descricaoRef = useRef(null);\n  const dataRef = useRef(null);\n  const valorRef = useRef(null);\n\n  // Função para centralizar o campo em foco\n  const handleFocus = e => {\n    e.target.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n  };\n\n  // Carrega categorias e tags\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        const tgs = await obterTags();\n        setAllTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n    if (!transacao) {\n      const hoje = new Date().toISOString().split('T')[0];\n      setData(hoje);\n    }\n  }, [transacao]);\n\n  // Agrupa as tags por categoria (para uso nos selects dos pagamentos)\n  const tagsPorCategoria = allTags.reduce((acc, tag) => {\n    if (tag.categoria) {\n      if (!acc[tag.categoria]) {\n        acc[tag.categoria] = [];\n      }\n      acc[tag.categoria].push(tag.nome);\n    }\n    return acc;\n  }, {});\n\n  // Pagamentos: manipulação de campos\n  const handlePagamentoChange = (index, field, value) => {\n    const novos = [...pagamentos];\n    novos[index][field] = value;\n    setPagamentos(novos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    // selectedOptions é um array de strings (já convertido via onChange no select)\n    const novos = [...pagamentos];\n    if (!novos[index].paymentTags) {\n      novos[index].paymentTags = {};\n    }\n    novos[index].paymentTags[categoria] = selectedOptions;\n    setPagamentos(novos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novos);\n  };\n\n  // Replicar o valor total para o único pagamento, se houver só um\n  const handleValorTotalChange = e => {\n    const raw = e.target.value;\n    setValorTotal(raw);\n    if (pagamentos.length === 1) {\n      handlePagamentoChange(0, 'valor', raw);\n    }\n  };\n\n  // Validação: a soma dos pagamentos deve ser igual ao valor total\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pag) => {\n      const v = parseFloat(pag.valor || 0);\n      return acc + (isNaN(v) ? 0 : v);\n    }, 0);\n    return parseFloat(valorTotal || 0) === soma;\n  };\n\n  // Atalho: Ctrl+S para salvar\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.key === 's') {\n        e.preventDefault();\n        handleSubmit(e, false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  // Atalho: Esc para fechar o modal\n  useEffect(() => {\n    const handleEsc = e => {\n      if (e.key === 'Escape') {\n        onClose();\n      }\n    };\n    window.addEventListener('keydown', handleEsc);\n    return () => window.removeEventListener('keydown', handleEsc);\n  }, [onClose]);\n  const setHoje = () => {\n    const hoje = new Date().toISOString().split('T')[0];\n    setData(hoje);\n  };\n  const setOntem = () => {\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\n    setData(ontem);\n  };\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\n  const handleSubmit = async (e, closeModal = true) => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const transacaoData = {\n      tipo,\n      descricao,\n      data,\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\n      // Removemos as tags do pai; apenas os pagamentos possuem tags\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\n        tags: pag.paymentTags\n      }))\n    };\n    try {\n      if (transacao && transacao.id) {\n        await atualizarTransacao(transacao.id, transacaoData);\n        alert('Transação atualizada com sucesso!');\n      } else {\n        await criarTransacao(transacaoData);\n        alert('Transação criada com sucesso!');\n      }\n      if (onSuccess) onSuccess();\n      if (closeModal) {\n        onClose();\n      } else {\n        // Reset para nova inserção\n        setTipo('gasto');\n        setDescricao('');\n        const hoje = new Date().toISOString().split('T')[0];\n        setData(hoje);\n        setValorTotal('');\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n      }\n    } catch (error) {\n      console.error('Erro ao salvar transação:', error);\n      alert('Erro ao salvar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: transacao ? 'Editar Transação' : 'Nova Transação'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tipo,\n              onChange: e => setTipo(e.target.value),\n              required: true,\n              onFocus: handleFocus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gasto\",\n                children: \"Gasto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recebivel\",\n                children: \"Receb\\xEDvel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: descricao,\n              onChange: e => setDescricao(e.target.value),\n              required: true,\n              list: \"descricao-suggestions\",\n              onFocus: handleFocus,\n              ref: descricaoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"descricao-suggestions\",\n              children: descricaoSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sug\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: data,\n              onChange: e => setData(e.target.value),\n              required: true,\n              onFocus: handleFocus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-shortcuts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setHoje,\n                children: \"Hoje\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setOntem,\n                children: \"Ontem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Valor Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: valorTotal,\n              onChange: handleValorTotalChange,\n              required: true,\n              onFocus: handleFocus,\n              ref: valorRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section pagamentos-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pagamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), pagamentos.map((pag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagamento-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pessoa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pag.pessoa,\n                  onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n                  required: true,\n                  list: \"pessoa-suggestions\",\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"pessoa-suggestions\",\n                  children: pessoaSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sug\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Valor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: pag.valor,\n                  onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n                  required: true,\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section payment-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Tags para Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tag-dropdown-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [cat.nome, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    multiple: true,\n                    value: pag.paymentTags && pag.paymentTags[cat.nome] || [],\n                    onChange: e => {\n                      const selected = Array.from(e.target.selectedOptions, opt => opt.value);\n                      const novos = [...pagamentos];\n                      if (!novos[index].paymentTags) {\n                        novos[index].paymentTags = {};\n                      }\n                      novos[index].paymentTags[cat.nome] = selected;\n                      setPagamentos(novos);\n                    },\n                    onFocus: handleFocus,\n                    children: (tagsPorCategoria[cat.nome] || []).map((tagName, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: tagName,\n                      children: tagName\n                    }, idx, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 298,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 25\n                  }, this)]\n                }, cat._id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removePagamento(index),\n                children: \"Remover Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addPagamento,\n              children: \"Adicionar Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, true),\n          children: transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, false),\n          children: transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"GWx9Pd5Rbj4wMSIr7Q5lOK+wsxs=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","criarTransacao","atualizarTransacao","obterCategorias","obterTags","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","transacao","_s","tipo","setTipo","descricao","setDescricao","data","setData","split","valorTotal","setValorTotal","String","valor","pagamentos","setPagamentos","length","pessoa","paymentTags","pessoaSuggestions","categorias","setCategorias","allTags","setAllTags","descricaoRef","dataRef","valorRef","handleFocus","e","target","scrollIntoView","behavior","block","fetchData","cats","tgs","error","console","hoje","Date","toISOString","tagsPorCategoria","reduce","acc","tag","categoria","push","nome","handlePagamentoChange","index","field","value","novos","handlePagamentoTagChange","selectedOptions","addPagamento","removePagamento","filter","_","i","handleValorTotalChange","raw","validatePagamentos","soma","pag","v","parseFloat","isNaN","handleKeyDown","ctrlKey","key","preventDefault","handleSubmit","window","addEventListener","removeEventListener","handleEsc","setHoje","setOntem","ontem","now","descricaoSuggestions","closeModal","alert","transacaoData","Number","toFixed","map","tags","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","onFocus","type","list","ref","sug","idx","onClick","step","cat","multiple","selected","Array","from","opt","tagName","_id","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose, transacao }) => {\r\n  // Campos da transação (pai)\r\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\r\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\r\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\r\n  const [valorTotal, setValorTotal] = useState(transacao ? String(transacao.valor) : '');\r\n  \r\n  // Removemos o campo de tags do pai\r\n\r\n  // Pagamentos (cada pagamento terá tags associadas)\r\n  const [pagamentos, setPagamentos] = useState(\r\n    transacao && transacao.pagamentos && transacao.pagamentos.length > 0\r\n      ? transacao.pagamentos\r\n      : [{ pessoa: '', valor: '', paymentTags: {} }]\r\n  );\r\n  \r\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\r\n\r\n  // Categorias e tags do backend (para os pagamentos)\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [allTags, setAllTags] = useState([]);\r\n\r\n  // Refs para facilitar o foco\r\n  const descricaoRef = useRef(null);\r\n  const dataRef = useRef(null);\r\n  const valorRef = useRef(null);\r\n\r\n  // Função para centralizar o campo em foco\r\n  const handleFocus = (e) => {\r\n    e.target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n  };\r\n\r\n  // Carrega categorias e tags\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        const tgs = await obterTags();\r\n        setAllTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n\r\n    if (!transacao) {\r\n      const hoje = new Date().toISOString().split('T')[0];\r\n      setData(hoje);\r\n    }\r\n  }, [transacao]);\r\n\r\n  // Agrupa as tags por categoria (para uso nos selects dos pagamentos)\r\n  const tagsPorCategoria = allTags.reduce((acc, tag) => {\r\n    if (tag.categoria) {\r\n      if (!acc[tag.categoria]) {\r\n        acc[tag.categoria] = [];\r\n      }\r\n      acc[tag.categoria].push(tag.nome);\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  // Pagamentos: manipulação de campos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novos = [...pagamentos];\r\n    novos[index][field] = value;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    // selectedOptions é um array de strings (já convertido via onChange no select)\r\n    const novos = [...pagamentos];\r\n    if (!novos[index].paymentTags) {\r\n      novos[index].paymentTags = {};\r\n    }\r\n    novos[index].paymentTags[categoria] = selectedOptions;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  // Replicar o valor total para o único pagamento, se houver só um\r\n  const handleValorTotalChange = (e) => {\r\n    const raw = e.target.value;\r\n    setValorTotal(raw);\r\n    if (pagamentos.length === 1) {\r\n      handlePagamentoChange(0, 'valor', raw);\r\n    }\r\n  };\r\n\r\n  // Validação: a soma dos pagamentos deve ser igual ao valor total\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pag) => {\r\n      const v = parseFloat(pag.valor || 0);\r\n      return acc + (isNaN(v) ? 0 : v);\r\n    }, 0);\r\n    return parseFloat(valorTotal || 0) === soma;\r\n  };\r\n\r\n  // Atalho: Ctrl+S para salvar\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        handleSubmit(e, false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  // Atalho: Esc para fechar o modal\r\n  useEffect(() => {\r\n    const handleEsc = (e) => {\r\n      if (e.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleEsc);\r\n    return () => window.removeEventListener('keydown', handleEsc);\r\n  }, [onClose]);\r\n\r\n  const setHoje = () => {\r\n    const hoje = new Date().toISOString().split('T')[0];\r\n    setData(hoje);\r\n  };\r\n\r\n  const setOntem = () => {\r\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\r\n    setData(ontem);\r\n  };\r\n\r\n  \r\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\r\n\r\n\r\n  const handleSubmit = async (e, closeModal = true) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const transacaoData = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\r\n      // Removemos as tags do pai; apenas os pagamentos possuem tags\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\r\n        tags: pag.paymentTags\r\n      }))\r\n    };\r\n    try {\r\n      if (transacao && transacao.id) {\r\n        await atualizarTransacao(transacao.id, transacaoData);\r\n        alert('Transação atualizada com sucesso!');\r\n      } else {\r\n        await criarTransacao(transacaoData);\r\n        alert('Transação criada com sucesso!');\r\n      }\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) {\r\n        onClose();\r\n      } else {\r\n        // Reset para nova inserção\r\n        setTipo('gasto');\r\n        setDescricao('');\r\n        const hoje = new Date().toISOString().split('T')[0];\r\n        setData(hoje);\r\n        setValorTotal('');\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao salvar transação:', error);\r\n      alert('Erro ao salvar transação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>{transacao ? 'Editar Transação' : 'Nova Transação'}</h2>\r\n      <form onSubmit={(e) => handleSubmit(e, true)}>\r\n        <div className=\"form-grid\">\r\n          <div className=\"left-column\">\r\n            <div className=\"form-section\">\r\n              <label>Tipo:</label>\r\n              <select value={tipo} onChange={e => setTipo(e.target.value)} required onFocus={handleFocus}>\r\n                <option value=\"gasto\">Gasto</option>\r\n                <option value=\"recebivel\">Recebível</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Descrição:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={descricao}\r\n                onChange={e => setDescricao(e.target.value)}\r\n                required\r\n                list=\"descricao-suggestions\"\r\n                onFocus={handleFocus}\r\n                ref={descricaoRef}\r\n              />\r\n              <datalist id=\"descricao-suggestions\">\r\n                {descricaoSuggestions.map((sug, idx) => (\r\n                  <option key={idx} value={sug} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Data:</label>\r\n              <input type=\"date\" value={data} onChange={e => setData(e.target.value)} required onFocus={handleFocus} />\r\n              <div className=\"date-shortcuts\">\r\n                <button type=\"button\" onClick={setHoje}>Hoje</button>\r\n                <button type=\"button\" onClick={setOntem}>Ontem</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Valor Total:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={valorTotal}\r\n                onChange={handleValorTotalChange}\r\n                required\r\n                onFocus={handleFocus}\r\n                ref={valorRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-column\">\r\n            {/* Removemos a seção de Tags Globais (pai) */}\r\n            <div className=\"form-section pagamentos-section\">\r\n              <h3>Pagamentos</h3>\r\n              {pagamentos.map((pag, index) => (\r\n                <div key={index} className=\"pagamento-item\">\r\n                  <div className=\"form-section\">\r\n                    <label>Pessoa:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={pag.pessoa}\r\n                      onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)}\r\n                      required\r\n                      list=\"pessoa-suggestions\"\r\n                      onFocus={handleFocus}\r\n                    />\r\n                    <datalist id=\"pessoa-suggestions\">\r\n                      {pessoaSuggestions.map((sug, idx) => (\r\n                        <option key={idx} value={sug} />\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <label>Valor:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={pag.valor}\r\n                      onChange={e => handlePagamentoChange(index, 'valor', e.target.value)}\r\n                      required\r\n                      onFocus={handleFocus}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-section payment-tags\">\r\n                    <h4>Tags para Pagamento</h4>\r\n                    {categorias.map(cat => (\r\n                      <div key={cat._id} className=\"tag-dropdown-group\">\r\n                        <label>{cat.nome}:</label>\r\n                        <select\r\n                          multiple\r\n                          value={(pag.paymentTags && pag.paymentTags[cat.nome]) || []}\r\n                          onChange={e => {\r\n                            const selected = Array.from(e.target.selectedOptions, opt => opt.value);\r\n                            const novos = [...pagamentos];\r\n                            if (!novos[index].paymentTags) {\r\n                              novos[index].paymentTags = {};\r\n                            }\r\n                            novos[index].paymentTags[cat.nome] = selected;\r\n                            setPagamentos(novos);\r\n                          }}\r\n                          onFocus={handleFocus}\r\n                        >\r\n                          {(tagsPorCategoria[cat.nome] || []).map((tagName, idx) => (\r\n                            <option key={idx} value={tagName}>\r\n                              {tagName}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removePagamento(index)}>\r\n                    Remover Pagamento\r\n                  </button>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={addPagamento}>\r\n                Adicionar Pagamento\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, true)}>\r\n            {transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'}\r\n          </button>\r\n          <button type=\"button\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, false)}>\r\n            {transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}