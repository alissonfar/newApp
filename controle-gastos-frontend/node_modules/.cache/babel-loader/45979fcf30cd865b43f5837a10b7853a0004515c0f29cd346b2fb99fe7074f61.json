{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport CustomDropdown from '../CustomDropdown';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose,\n  transacao\n}) => {\n  _s();\n  // Estados dos dados gerais\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\n  const [valorTotal, setValorTotal] = useState(transacao ? transacao.valor.toString() : '');\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\n\n  // Estados para categorias e tags\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de strings (nomes das tags)\n  const [globalTags, setGlobalTags] = useState(transacao ? transacao.tags : {});\n\n  // Estados para pagamentos (sub-transações)\n  const [pagamentos, setPagamentos] = useState(transacao && transacao.pagamentos && transacao.pagamentos.length > 0 ? transacao.pagamentos : [{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\n  const descricaoRef = useRef(null);\n  const dataRef = useRef(null);\n  const valorRef = useRef(null);\n\n  // Função para centralizar o campo com foco (mantida, se necessário)\n  const handleFocus = e => {\n    e.target.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n  };\n\n  // Carregar categorias e tags do backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        // Inicializa globalTags para cada categoria, preservando se já houver (edição)\n        const initGlobal = {};\n        cats.forEach(cat => {\n          initGlobal[cat.nome] = globalTags[cat.nome] || [];\n        });\n        setGlobalTags(initGlobal);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n    if (!transacao) {\n      const hoje = new Date().toISOString().split('T')[0];\n      setData(hoje);\n    }\n  }, [transacao]);\n\n  // Função para agrupar as tags por categoria (para exibir nos dropdowns)\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        const catKey = tag.categoria;\n        if (!acc[catKey]) {\n          acc[catKey] = [];\n        }\n        acc[catKey].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n\n  // Função para converter array de strings para array de objetos { value, label }\n  const convertToOptions = arr => arr.map(item => ({\n    value: item,\n    label: item\n  }));\n\n  // Atualiza a seleção global de tags usando o CustomDropdown\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\n    const selectedValues = selectedOptions ? selectedOptions.map(opt => opt.value) : [];\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: selectedValues\n    }));\n  };\n\n  // Funções para pagamentos\n  const handlePagamentoChange = (index, field, value) => {\n    const novosPagamentos = [...pagamentos];\n    novosPagamentos[index][field] = value;\n    setPagamentos(novosPagamentos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    const selectedValues = selectedOptions ? selectedOptions.map(opt => opt.value) : [];\n    const novosPagamentos = [...pagamentos];\n    if (!novosPagamentos[index].paymentTags) {\n      novosPagamentos[index].paymentTags = {};\n    }\n    novosPagamentos[index].paymentTags[categoria] = selectedValues;\n    setPagamentos(novosPagamentos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novosPagamentos);\n  };\n\n  // Validação: soma dos pagamentos deve ser igual ao valor total\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pag) => {\n      const valor = parseFloat(pag.valor || 0);\n      return acc + (isNaN(valor) ? 0 : valor);\n    }, 0);\n    return parseFloat(valorTotal) === soma;\n  };\n\n  // Atalho: Ctrl+S para salvar e continuar\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.key === 's') {\n        e.preventDefault();\n        handleSubmit(e, false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n  const setHoje = () => {\n    const hoje = new Date().toISOString().split('T')[0];\n    setData(hoje);\n  };\n  const setOntem = () => {\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\n    setData(ontem);\n  };\n  const handleValorTotalChange = e => {\n    const raw = e.target.value;\n    setValorTotal(raw);\n    if (pagamentos.length === 1) {\n      handlePagamentoChange(0, 'valor', raw);\n    }\n  };\n  const handleSubmit = async (e, closeModal = true) => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const transacaoData = {\n      tipo,\n      descricao,\n      data,\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\n      tags: globalTags,\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\n        tags: pag.paymentTags\n      }))\n    };\n    try {\n      if (transacao && transacao.id) {\n        await atualizarTransacao(transacao.id, transacaoData);\n        alert('Transação atualizada com sucesso!');\n      } else {\n        await criarTransacao(transacaoData);\n        alert('Transação criada com sucesso!');\n      }\n      if (onSuccess) onSuccess();\n      if (closeModal) {\n        onClose();\n      } else {\n        // Limpa os campos para nova inserção\n        setTipo('gasto');\n        setDescricao('');\n        const hoje = new Date().toISOString().split('T')[0];\n        setData(hoje);\n        setValorTotal('');\n        setGlobalTags({});\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n        descricaoRef.current && descricaoRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Erro ao criar/atualizar transação:', error);\n      alert('Erro ao criar/atualizar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: transacao ? 'Editar Transação' : 'Nova Transação'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tipo,\n              onChange: e => setTipo(e.target.value),\n              required: true,\n              onFocus: handleFocus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gasto\",\n                children: \"Gasto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recebivel\",\n                children: \"Receb\\xEDvel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: descricao,\n              onChange: e => setDescricao(e.target.value),\n              required: true,\n              list: \"descricao-suggestions\",\n              onFocus: handleFocus,\n              ref: descricaoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"descricao-suggestions\",\n              children: descricaoSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sug\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: data,\n              onChange: e => setData(e.target.value),\n              required: true,\n              onFocus: handleFocus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-shortcuts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setHoje,\n                children: \"Hoje\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setOntem,\n                children: \"Ontem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Valor Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: valorTotal,\n              onChange: handleValorTotalChange,\n              required: true,\n              onFocus: handleFocus,\n              ref: valorRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section global-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Tags Globais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag-dropdown-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [cat.nome, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                isMulti: true,\n                placeholder: `Selecione ${cat.nome}`,\n                options: (tagsPorCategoria[cat.nome] || []).map(tag => ({\n                  value: tag.nome,\n                  label: tag.nome\n                })),\n                value: (globalTags[cat.nome] || []).map(tagName => ({\n                  value: tagName,\n                  label: tagName\n                })),\n                onChange: selected => handleGlobalTagChange(cat.nome, selected ? selected.map(item => item.value) : [])\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)]\n            }, cat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section pagamentos-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pagamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagamento-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pessoa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pagamento.pessoa,\n                  onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n                  required: true,\n                  list: \"pessoa-suggestions\",\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"pessoa-suggestions\",\n                  children: pessoaSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sug\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Valor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: pagamento.valor,\n                  onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n                  required: true,\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section payment-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Tags para Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tag-dropdown-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [cat.nome, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                    isMulti: true,\n                    placeholder: `Selecione ${cat.nome}`,\n                    options: (tagsPorCategoria[cat.nome] || []).map(tag => ({\n                      value: tag.nome,\n                      label: tag.nome\n                    })),\n                    value: (pagamento.paymentTags && pagamento.paymentTags[cat.nome] ? pagamento.paymentTags[cat.nome] : []).map(tagName => ({\n                      value: tagName,\n                      label: tagName\n                    })),\n                    onChange: selected => handlePagamentoTagChange(index, cat.nome, selected ? selected.map(item => item.value) : [])\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)]\n                }, cat.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removePagamento(index),\n                children: \"Remover Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addPagamento,\n              children: \"Adicionar Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, true),\n          children: transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, false),\n          children: transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"uYoPQ4zdGSJNg1RtNXibmQWykT0=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","criarTransacao","atualizarTransacao","obterCategorias","obterTags","CustomDropdown","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","transacao","_s","tipo","setTipo","descricao","setDescricao","data","setData","split","valorTotal","setValorTotal","valor","toString","descricaoSuggestions","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","length","pessoa","paymentTags","pessoaSuggestions","descricaoRef","dataRef","valorRef","handleFocus","e","target","scrollIntoView","behavior","block","fetchData","cats","initGlobal","forEach","cat","nome","tgs","error","console","hoje","Date","toISOString","getTagsByCategory","reduce","acc","tag","categoria","catKey","push","tagsPorCategoria","convertToOptions","arr","map","item","value","label","handleGlobalTagChange","selectedOptions","selectedValues","opt","prev","handlePagamentoChange","index","field","novosPagamentos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pag","parseFloat","isNaN","handleKeyDown","ctrlKey","key","preventDefault","handleSubmit","window","addEventListener","removeEventListener","setHoje","setOntem","ontem","now","handleValorTotalChange","raw","closeModal","alert","transacaoData","Number","toFixed","id","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","onFocus","type","list","ref","sug","idx","onClick","step","isMulti","placeholder","options","tagName","selected","pagamento","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport CustomDropdown from '../CustomDropdown';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose, transacao }) => {\r\n  // Estados dos dados gerais\r\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\r\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\r\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\r\n  const [valorTotal, setValorTotal] = useState(transacao ? transacao.valor.toString() : '');\r\n  \r\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\r\n  \r\n  // Estados para categorias e tags\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de strings (nomes das tags)\r\n  const [globalTags, setGlobalTags] = useState(transacao ? transacao.tags : {});\r\n  \r\n  // Estados para pagamentos (sub-transações)\r\n  const [pagamentos, setPagamentos] = useState(\r\n    transacao && transacao.pagamentos && transacao.pagamentos.length > 0\r\n      ? transacao.pagamentos\r\n      : [{ pessoa: '', valor: '', paymentTags: {} }]\r\n  );\r\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\r\n  \r\n  const descricaoRef = useRef(null);\r\n  const dataRef = useRef(null);\r\n  const valorRef = useRef(null);\r\n\r\n  // Função para centralizar o campo com foco (mantida, se necessário)\r\n  const handleFocus = (e) => {\r\n    e.target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n  };\r\n\r\n  // Carregar categorias e tags do backend\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        // Inicializa globalTags para cada categoria, preservando se já houver (edição)\r\n        const initGlobal = {};\r\n        cats.forEach(cat => {\r\n          initGlobal[cat.nome] = globalTags[cat.nome] || [];\r\n        });\r\n        setGlobalTags(initGlobal);\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n    if (!transacao) {\r\n      const hoje = new Date().toISOString().split('T')[0];\r\n      setData(hoje);\r\n    }\r\n  }, [transacao]);\r\n\r\n  // Função para agrupar as tags por categoria (para exibir nos dropdowns)\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        const catKey = tag.categoria;\r\n        if (!acc[catKey]) {\r\n          acc[catKey] = [];\r\n        }\r\n        acc[catKey].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n  const tagsPorCategoria = getTagsByCategory();\r\n\r\n  // Função para converter array de strings para array de objetos { value, label }\r\n  const convertToOptions = (arr) =>\r\n    arr.map(item => ({ value: item, label: item }));\r\n\r\n  // Atualiza a seleção global de tags usando o CustomDropdown\r\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\r\n    const selectedValues = selectedOptions ? selectedOptions.map(opt => opt.value) : [];\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: selectedValues\r\n    }));\r\n  };\r\n\r\n  // Funções para pagamentos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    novosPagamentos[index][field] = value;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    const selectedValues = selectedOptions ? selectedOptions.map(opt => opt.value) : [];\r\n    const novosPagamentos = [...pagamentos];\r\n    if (!novosPagamentos[index].paymentTags) {\r\n      novosPagamentos[index].paymentTags = {};\r\n    }\r\n    novosPagamentos[index].paymentTags[categoria] = selectedValues;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  // Validação: soma dos pagamentos deve ser igual ao valor total\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pag) => {\r\n      const valor = parseFloat(pag.valor || 0);\r\n      return acc + (isNaN(valor) ? 0 : valor);\r\n    }, 0);\r\n    return parseFloat(valorTotal) === soma;\r\n  };\r\n\r\n  // Atalho: Ctrl+S para salvar e continuar\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        handleSubmit(e, false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  const setHoje = () => {\r\n    const hoje = new Date().toISOString().split('T')[0];\r\n    setData(hoje);\r\n  };\r\n\r\n  const setOntem = () => {\r\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\r\n    setData(ontem);\r\n  };\r\n\r\n  const handleValorTotalChange = (e) => {\r\n    const raw = e.target.value;\r\n    setValorTotal(raw);\r\n    if (pagamentos.length === 1) {\r\n      handlePagamentoChange(0, 'valor', raw);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e, closeModal = true) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const transacaoData = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\r\n      tags: globalTags,\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\r\n        tags: pag.paymentTags\r\n      }))\r\n    };\r\n    try {\r\n      if (transacao && transacao.id) {\r\n        await atualizarTransacao(transacao.id, transacaoData);\r\n        alert('Transação atualizada com sucesso!');\r\n      } else {\r\n        await criarTransacao(transacaoData);\r\n        alert('Transação criada com sucesso!');\r\n      }\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) {\r\n        onClose();\r\n      } else {\r\n        // Limpa os campos para nova inserção\r\n        setTipo('gasto');\r\n        setDescricao('');\r\n        const hoje = new Date().toISOString().split('T')[0];\r\n        setData(hoje);\r\n        setValorTotal('');\r\n        setGlobalTags({});\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n        descricaoRef.current && descricaoRef.current.focus();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao criar/atualizar transação:', error);\r\n      alert('Erro ao criar/atualizar transação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>{transacao ? 'Editar Transação' : 'Nova Transação'}</h2>\r\n      <form onSubmit={(e) => handleSubmit(e, true)}>\r\n        <div className=\"form-grid\">\r\n          <div className=\"left-column\">\r\n            <div className=\"form-section\">\r\n              <label>Tipo:</label>\r\n              <select\r\n                value={tipo}\r\n                onChange={e => setTipo(e.target.value)}\r\n                required\r\n                onFocus={handleFocus}\r\n              >\r\n                <option value=\"gasto\">Gasto</option>\r\n                <option value=\"recebivel\">Recebível</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Descrição:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={descricao}\r\n                onChange={e => setDescricao(e.target.value)}\r\n                required\r\n                list=\"descricao-suggestions\"\r\n                onFocus={handleFocus}\r\n                ref={descricaoRef}\r\n              />\r\n              <datalist id=\"descricao-suggestions\">\r\n                {descricaoSuggestions.map((sug, idx) => (\r\n                  <option key={idx} value={sug} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Data:</label>\r\n              <input\r\n                type=\"date\"\r\n                value={data}\r\n                onChange={e => setData(e.target.value)}\r\n                required\r\n                onFocus={handleFocus}\r\n              />\r\n              <div className=\"date-shortcuts\">\r\n                <button type=\"button\" onClick={setHoje}>Hoje</button>\r\n                <button type=\"button\" onClick={setOntem}>Ontem</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Valor Total:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={valorTotal}\r\n                onChange={handleValorTotalChange}\r\n                required\r\n                onFocus={handleFocus}\r\n                ref={valorRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-column\">\r\n            <div className=\"form-section global-tags\">\r\n              <h3>Tags Globais</h3>\r\n              {categorias.map(cat => (\r\n                <div key={cat.id} className=\"tag-dropdown-group\">\r\n                  <label>{cat.nome}:</label>\r\n                  <CustomDropdown\r\n                    isMulti={true}\r\n                    placeholder={`Selecione ${cat.nome}`}\r\n                    options={(tagsPorCategoria[cat.nome] || []).map(tag => ({\r\n                      value: tag.nome,\r\n                      label: tag.nome\r\n                    }))}\r\n                    value={\r\n                      (globalTags[cat.nome] || []).map(tagName => ({\r\n                        value: tagName,\r\n                        label: tagName\r\n                      }))\r\n                    }\r\n                    onChange={(selected) =>\r\n                      handleGlobalTagChange(\r\n                        cat.nome,\r\n                        selected ? selected.map(item => item.value) : []\r\n                      )\r\n                    }\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"form-section pagamentos-section\">\r\n              <h3>Pagamentos</h3>\r\n              {pagamentos.map((pagamento, index) => (\r\n                <div key={index} className=\"pagamento-item\">\r\n                  <div className=\"form-section\">\r\n                    <label>Pessoa:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={pagamento.pessoa}\r\n                      onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)}\r\n                      required\r\n                      list=\"pessoa-suggestions\"\r\n                      onFocus={handleFocus}\r\n                    />\r\n                    <datalist id=\"pessoa-suggestions\">\r\n                      {pessoaSuggestions.map((sug, idx) => (\r\n                        <option key={idx} value={sug} />\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <label>Valor:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={pagamento.valor}\r\n                      onChange={e => handlePagamentoChange(index, 'valor', e.target.value)}\r\n                      required\r\n                      onFocus={handleFocus}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-section payment-tags\">\r\n                    <h4>Tags para Pagamento</h4>\r\n                    {categorias.map(cat => (\r\n                      <div key={cat.id} className=\"tag-dropdown-group\">\r\n                        <label>{cat.nome}:</label>\r\n                        <CustomDropdown\r\n                          isMulti={true}\r\n                          placeholder={`Selecione ${cat.nome}`}\r\n                          options={(tagsPorCategoria[cat.nome] || []).map(tag => ({\r\n                            value: tag.nome,\r\n                            label: tag.nome\r\n                          }))}\r\n                          value={\r\n                            (pagamento.paymentTags && pagamento.paymentTags[cat.nome]\r\n                              ? pagamento.paymentTags[cat.nome]\r\n                              : []\r\n                            ).map(tagName => ({ value: tagName, label: tagName }))\r\n                          }\r\n                          onChange={(selected) =>\r\n                            handlePagamentoTagChange(\r\n                              index,\r\n                              cat.nome,\r\n                              selected ? selected.map(item => item.value) : []\r\n                            )\r\n                          }\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removePagamento(index)}>\r\n                    Remover Pagamento\r\n                  </button>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, true)}>\r\n            {transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'}\r\n          </button>\r\n          <button type=\"button\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, false)}>\r\n            {transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}