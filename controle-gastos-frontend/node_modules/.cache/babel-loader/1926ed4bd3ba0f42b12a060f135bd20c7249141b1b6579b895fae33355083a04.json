{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport CustomDropdown from '../CustomDropdown';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose,\n  transacao\n}) => {\n  _s();\n  // Estados dos dados gerais\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\n  const [valorTotal, setValorTotal] = useState(transacao ? String(transacao.valor) : '');\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\n\n  // Categorias e tags\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  // Objeto: { \"NomeDaCategoria\": [\"tag1\", \"tag2\"] }\n  const [globalTags, setGlobalTags] = useState(transacao ? transacao.tags : {});\n\n  // Pagamentos\n  const [pagamentos, setPagamentos] = useState(transacao && transacao.pagamentos && transacao.pagamentos.length > 0 ? transacao.pagamentos : [{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\n\n  // Refs para foco\n  const descricaoRef = useRef(null);\n\n  // Carregar categorias e tags\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n\n    // Se não for edição, define data como hoje\n    if (!transacao) {\n      const hoje = new Date().toISOString().split('T')[0];\n      setData(hoje);\n    }\n  }, [transacao]);\n\n  // Agrupa as tags por categoria\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        if (!acc[tag.categoria]) {\n          acc[tag.categoria] = [];\n        }\n        acc[tag.categoria].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n\n  // Se user remover todas as seleções, React-Select retorna null.\n  // Precisamos converter null -> []\n  const safeArray = selected => selected ? selected : [];\n\n  // Converte array de strings -> array de objetos { value, label }\n  const convertToOptions = arr => arr.map(item => ({\n    value: item,\n    label: item\n  }));\n\n  // Handle para Tags Globais\n  const handleGlobalTagChange = (categoria, selected) => {\n    const array = safeArray(selected); // se for null, vira []\n    // array de { value, label } -> array de strings\n    const stringArr = array.map(opt => opt.value);\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: stringArr\n    }));\n  };\n\n  // Pagamentos\n  const handlePagamentoChange = (index, field, value) => {\n    const novos = [...pagamentos];\n    novos[index][field] = value;\n    setPagamentos(novos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selected) => {\n    const array = safeArray(selected); // se for null, vira []\n    const stringArr = array.map(opt => opt.value);\n    const novos = [...pagamentos];\n    if (!novos[index].paymentTags) {\n      novos[index].paymentTags = {};\n    }\n    novos[index].paymentTags[categoria] = stringArr;\n    setPagamentos(novos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novos);\n  };\n\n  // Validação\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pag) => {\n      const v = parseFloat(pag.valor || 0);\n      return acc + (isNaN(v) ? 0 : v);\n    }, 0);\n    return parseFloat(valorTotal || 0) === soma;\n  };\n\n  // Atalho: Ctrl+S para salvar e continuar\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.key === 's') {\n        e.preventDefault();\n        handleSubmit(e, false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  // Botões para data\n  const setHoje = () => {\n    const hoje = new Date().toISOString().split('T')[0];\n    setData(hoje);\n  };\n  const setOntem = () => {\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\n    setData(ontem);\n  };\n\n  // Ao alterar valor total, se só tem 1 pagamento, sincroniza\n  const handleValorTotalChange = e => {\n    const raw = e.target.value;\n    setValorTotal(raw);\n    if (pagamentos.length === 1) {\n      handlePagamentoChange(0, 'valor', raw);\n    }\n  };\n  const handleSubmit = async (e, closeModal = true) => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const transacaoData = {\n      tipo,\n      descricao,\n      data,\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\n      tags: globalTags,\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\n        tags: pag.paymentTags\n      }))\n    };\n    try {\n      if (transacao && transacao.id) {\n        await atualizarTransacao(transacao.id, transacaoData);\n        alert('Transação atualizada com sucesso!');\n      } else {\n        await criarTransacao(transacaoData);\n        alert('Transação criada com sucesso!');\n      }\n      if (onSuccess) onSuccess();\n      if (closeModal) {\n        onClose();\n      } else {\n        // Limpa os campos\n        setTipo('gasto');\n        setDescricao('');\n        const hoje = new Date().toISOString().split('T')[0];\n        setData(hoje);\n        setValorTotal('');\n        setGlobalTags({});\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n        if (descricaoRef.current) descricaoRef.current.focus();\n      }\n    } catch (error) {\n      console.error('Erro ao criar/atualizar transação:', error);\n      alert('Erro ao criar/atualizar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: transacao ? 'Editar Transação' : 'Nova Transação'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tipo,\n              onChange: e => setTipo(e.target.value),\n              required: true,\n              onFocus: handleFocus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gasto\",\n                children: \"Gasto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recebivel\",\n                children: \"Receb\\xEDvel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: descricao,\n              onChange: e => setDescricao(e.target.value),\n              required: true,\n              list: \"descricao-suggestions\",\n              ref: descricaoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"descricao-suggestions\",\n              children: descricaoSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sug\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: data,\n              onChange: e => setData(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-shortcuts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setHoje,\n                children: \"Hoje\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setOntem,\n                children: \"Ontem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Valor Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.01\",\n              value: valorTotal,\n              onChange: handleValorTotalChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section global-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Tags Globais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), categorias.map(cat => {\n              const catName = cat.nome;\n              // array de strings -> array de { value, label }\n              const selectedOptions = (globalTags[catName] || []).map(tagName => ({\n                value: tagName,\n                label: tagName\n              }));\n              // Monta as opções a partir de tagsPorCategoria\n              const options = (tagsPorCategoria[catName] || []).map(tag => ({\n                value: tag.nome,\n                label: tag.nome\n              }));\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tag-dropdown-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [catName, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                  isMulti: true,\n                  placeholder: `Selecione ${catName}`,\n                  options: options,\n                  value: selectedOptions,\n                  onChange: selected => {\n                    // Se for null, vira []\n                    const arr = selected || [];\n                    // array de { value, label } -> array de strings\n                    const stringArr = arr.map(opt => opt.value);\n                    setGlobalTags(prev => ({\n                      ...prev,\n                      [catName]: stringArr\n                    }));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, cat.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section pagamentos-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pagamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagamento-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pessoa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pagamento.pessoa,\n                  onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n                  required: true,\n                  list: \"pessoa-suggestions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"pessoa-suggestions\",\n                  children: pessoaSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sug\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Valor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  step: \"0.01\",\n                  value: pagamento.valor,\n                  onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section payment-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Tags para Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 21\n                }, this), categorias.map(cat => {\n                  const catName = cat.nome;\n                  const payTags = pagamento.paymentTags[catName] || [];\n                  // array de strings -> array de { value, label }\n                  const selectedOptions = payTags.map(tagName => ({\n                    value: tagName,\n                    label: tagName\n                  }));\n                  const options = (tagsPorCategoria[catName] || []).map(tag => ({\n                    value: tag.nome,\n                    label: tag.nome\n                  }));\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"tag-dropdown-group\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [catName, \":\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(CustomDropdown, {\n                      isMulti: true,\n                      placeholder: `Selecione ${catName}`,\n                      options: options,\n                      value: selectedOptions,\n                      onChange: selected => {\n                        const arr = selected || [];\n                        const stringArr = arr.map(opt => opt.value);\n                        const novos = [...pagamentos];\n                        if (!novos[index].paymentTags) {\n                          novos[index].paymentTags = {};\n                        }\n                        novos[index].paymentTags[catName] = stringArr;\n                        setPagamentos(novos);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 27\n                    }, this)]\n                  }, cat.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 25\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removePagamento(index),\n                children: \"Remover Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addPagamento,\n              children: \"Adicionar Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, true),\n          children: transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, false),\n          children: transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"ABhe89fncOLfTUIL5AHUyYW637k=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","criarTransacao","atualizarTransacao","obterCategorias","obterTags","CustomDropdown","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","transacao","_s","tipo","setTipo","descricao","setDescricao","data","setData","split","valorTotal","setValorTotal","String","valor","descricaoSuggestions","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","length","pessoa","paymentTags","pessoaSuggestions","descricaoRef","fetchData","cats","tgs","error","console","hoje","Date","toISOString","getTagsByCategory","reduce","acc","tag","categoria","push","tagsPorCategoria","safeArray","selected","convertToOptions","arr","map","item","value","label","handleGlobalTagChange","array","stringArr","opt","prev","handlePagamentoChange","index","field","novos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pag","v","parseFloat","isNaN","handleKeyDown","e","ctrlKey","key","preventDefault","handleSubmit","window","addEventListener","removeEventListener","setHoje","setOntem","ontem","now","handleValorTotalChange","raw","target","closeModal","alert","transacaoData","Number","toFixed","id","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","onFocus","handleFocus","type","list","ref","sug","idx","onClick","step","cat","catName","nome","selectedOptions","tagName","options","isMulti","placeholder","pagamento","payTags","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { criarTransacao, atualizarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport CustomDropdown from '../CustomDropdown';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose, transacao }) => {\r\n  // Estados dos dados gerais\r\n  const [tipo, setTipo] = useState(transacao ? transacao.tipo : 'gasto');\r\n  const [descricao, setDescricao] = useState(transacao ? transacao.descricao : '');\r\n  const [data, setData] = useState(transacao ? transacao.data.split('T')[0] : '');\r\n  const [valorTotal, setValorTotal] = useState(transacao ? String(transacao.valor) : '');\r\n\r\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\r\n\r\n  // Categorias e tags\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  // Objeto: { \"NomeDaCategoria\": [\"tag1\", \"tag2\"] }\r\n  const [globalTags, setGlobalTags] = useState(transacao ? transacao.tags : {});\r\n\r\n  // Pagamentos\r\n  const [pagamentos, setPagamentos] = useState(\r\n    transacao && transacao.pagamentos && transacao.pagamentos.length > 0\r\n      ? transacao.pagamentos\r\n      : [{ pessoa: '', valor: '', paymentTags: {} }]\r\n  );\r\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\r\n\r\n  // Refs para foco\r\n  const descricaoRef = useRef(null);\r\n\r\n  // Carregar categorias e tags\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n\r\n    // Se não for edição, define data como hoje\r\n    if (!transacao) {\r\n      const hoje = new Date().toISOString().split('T')[0];\r\n      setData(hoje);\r\n    }\r\n  }, [transacao]);\r\n\r\n  // Agrupa as tags por categoria\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        if (!acc[tag.categoria]) {\r\n          acc[tag.categoria] = [];\r\n        }\r\n        acc[tag.categoria].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n  const tagsPorCategoria = getTagsByCategory();\r\n\r\n  // Se user remover todas as seleções, React-Select retorna null.\r\n  // Precisamos converter null -> []\r\n  const safeArray = (selected) => (selected ? selected : []);\r\n\r\n  // Converte array de strings -> array de objetos { value, label }\r\n  const convertToOptions = (arr) => arr.map(item => ({ value: item, label: item }));\r\n\r\n  // Handle para Tags Globais\r\n  const handleGlobalTagChange = (categoria, selected) => {\r\n    const array = safeArray(selected); // se for null, vira []\r\n    // array de { value, label } -> array de strings\r\n    const stringArr = array.map(opt => opt.value);\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: stringArr\r\n    }));\r\n  };\r\n\r\n  // Pagamentos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novos = [...pagamentos];\r\n    novos[index][field] = value;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selected) => {\r\n    const array = safeArray(selected); // se for null, vira []\r\n    const stringArr = array.map(opt => opt.value);\r\n\r\n    const novos = [...pagamentos];\r\n    if (!novos[index].paymentTags) {\r\n      novos[index].paymentTags = {};\r\n    }\r\n    novos[index].paymentTags[categoria] = stringArr;\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novos);\r\n  };\r\n\r\n  // Validação\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pag) => {\r\n      const v = parseFloat(pag.valor || 0);\r\n      return acc + (isNaN(v) ? 0 : v);\r\n    }, 0);\r\n    return parseFloat(valorTotal || 0) === soma;\r\n  };\r\n\r\n  // Atalho: Ctrl+S para salvar e continuar\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        handleSubmit(e, false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n\r\n  // Botões para data\r\n  const setHoje = () => {\r\n    const hoje = new Date().toISOString().split('T')[0];\r\n    setData(hoje);\r\n  };\r\n\r\n  const setOntem = () => {\r\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\r\n    setData(ontem);\r\n  };\r\n\r\n  // Ao alterar valor total, se só tem 1 pagamento, sincroniza\r\n  const handleValorTotalChange = (e) => {\r\n    const raw = e.target.value;\r\n    setValorTotal(raw);\r\n    if (pagamentos.length === 1) {\r\n      handlePagamentoChange(0, 'valor', raw);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e, closeModal = true) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const transacaoData = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: Number(parseFloat(valorTotal).toFixed(2)),\r\n      tags: globalTags,\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: Number(parseFloat(pag.valor).toFixed(2)),\r\n        tags: pag.paymentTags\r\n      }))\r\n    };\r\n    try {\r\n      if (transacao && transacao.id) {\r\n        await atualizarTransacao(transacao.id, transacaoData);\r\n        alert('Transação atualizada com sucesso!');\r\n      } else {\r\n        await criarTransacao(transacaoData);\r\n        alert('Transação criada com sucesso!');\r\n      }\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) {\r\n        onClose();\r\n      } else {\r\n        // Limpa os campos\r\n        setTipo('gasto');\r\n        setDescricao('');\r\n        const hoje = new Date().toISOString().split('T')[0];\r\n        setData(hoje);\r\n        setValorTotal('');\r\n        setGlobalTags({});\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n        if (descricaoRef.current) descricaoRef.current.focus();\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao criar/atualizar transação:', error);\r\n      alert('Erro ao criar/atualizar transação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>{transacao ? 'Editar Transação' : 'Nova Transação'}</h2>\r\n      <form onSubmit={(e) => handleSubmit(e, true)}>\r\n        <div className=\"form-grid\">\r\n          <div className=\"left-column\">\r\n            <div className=\"form-section\">\r\n              <label>Tipo:</label>\r\n              <select\r\n                value={tipo}\r\n                onChange={e => setTipo(e.target.value)}\r\n                required\r\n                onFocus={handleFocus}\r\n              >\r\n                <option value=\"gasto\">Gasto</option>\r\n                <option value=\"recebivel\">Recebível</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Descrição:</label>\r\n              <input\r\n                type=\"text\"\r\n                value={descricao}\r\n                onChange={e => setDescricao(e.target.value)}\r\n                required\r\n                list=\"descricao-suggestions\"\r\n                ref={descricaoRef}\r\n              />\r\n              <datalist id=\"descricao-suggestions\">\r\n                {descricaoSuggestions.map((sug, idx) => (\r\n                  <option key={idx} value={sug} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Data:</label>\r\n              <input\r\n                type=\"date\"\r\n                value={data}\r\n                onChange={e => setData(e.target.value)}\r\n                required\r\n              />\r\n              <div className=\"date-shortcuts\">\r\n                <button type=\"button\" onClick={setHoje}>Hoje</button>\r\n                <button type=\"button\" onClick={setOntem}>Ontem</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Valor Total:</label>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={valorTotal}\r\n                onChange={handleValorTotalChange}\r\n                required\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Right Column (Tags Globais + Pagamentos) */}\r\n          <div className=\"right-column\">\r\n            <div className=\"form-section global-tags\">\r\n              <h3>Tags Globais</h3>\r\n              {categorias.map(cat => {\r\n                const catName = cat.nome;\r\n                // array de strings -> array de { value, label }\r\n                const selectedOptions = (globalTags[catName] || []).map(tagName => ({\r\n                  value: tagName,\r\n                  label: tagName\r\n                }));\r\n                // Monta as opções a partir de tagsPorCategoria\r\n                const options = (tagsPorCategoria[catName] || []).map(tag => ({\r\n                  value: tag.nome,\r\n                  label: tag.nome\r\n                }));\r\n                return (\r\n                  <div key={cat.id} className=\"tag-dropdown-group\">\r\n                    <label>{catName}:</label>\r\n                    <CustomDropdown\r\n                      isMulti={true}\r\n                      placeholder={`Selecione ${catName}`}\r\n                      options={options}\r\n                      value={selectedOptions}\r\n                      onChange={(selected) => {\r\n                        // Se for null, vira []\r\n                        const arr = selected || [];\r\n                        // array de { value, label } -> array de strings\r\n                        const stringArr = arr.map(opt => opt.value);\r\n                        setGlobalTags(prev => ({\r\n                          ...prev,\r\n                          [catName]: stringArr\r\n                        }));\r\n                      }}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <div className=\"form-section pagamentos-section\">\r\n              <h3>Pagamentos</h3>\r\n              {pagamentos.map((pagamento, index) => (\r\n                <div key={index} className=\"pagamento-item\">\r\n                  <div className=\"form-section\">\r\n                    <label>Pessoa:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={pagamento.pessoa}\r\n                      onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)}\r\n                      required\r\n                      list=\"pessoa-suggestions\"\r\n                    />\r\n                    <datalist id=\"pessoa-suggestions\">\r\n                      {pessoaSuggestions.map((sug, idx) => (\r\n                        <option key={idx} value={sug} />\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <label>Valor:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      value={pagamento.valor}\r\n                      onChange={e => handlePagamentoChange(index, 'valor', e.target.value)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-section payment-tags\">\r\n                    <h4>Tags para Pagamento</h4>\r\n                    {categorias.map(cat => {\r\n                      const catName = cat.nome;\r\n                      const payTags = pagamento.paymentTags[catName] || [];\r\n                      // array de strings -> array de { value, label }\r\n                      const selectedOptions = payTags.map(tagName => ({\r\n                        value: tagName,\r\n                        label: tagName\r\n                      }));\r\n                      const options = (tagsPorCategoria[catName] || []).map(tag => ({\r\n                        value: tag.nome,\r\n                        label: tag.nome\r\n                      }));\r\n                      return (\r\n                        <div key={cat.id} className=\"tag-dropdown-group\">\r\n                          <label>{catName}:</label>\r\n                          <CustomDropdown\r\n                            isMulti={true}\r\n                            placeholder={`Selecione ${catName}`}\r\n                            options={options}\r\n                            value={selectedOptions}\r\n                            onChange={(selected) => {\r\n                              const arr = selected || [];\r\n                              const stringArr = arr.map(opt => opt.value);\r\n                              const novos = [...pagamentos];\r\n                              if (!novos[index].paymentTags) {\r\n                                novos[index].paymentTags = {};\r\n                              }\r\n                              novos[index].paymentTags[catName] = stringArr;\r\n                              setPagamentos(novos);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removePagamento(index)}>\r\n                    Remover Pagamento\r\n                  </button>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <button\r\n            type=\"submit\"\r\n            className=\"submit-btn\"\r\n            onClick={(e) => handleSubmit(e, true)}\r\n          >\r\n            {transacao ? 'Atualizar e Fechar' : 'Salvar e Fechar'}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"submit-btn\"\r\n            onClick={(e) => handleSubmit(e, false)}\r\n          >\r\n            {transacao ? 'Atualizar e Continuar' : 'Salvar e Continuar'}\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}