{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState } from 'react';\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose\n}) => {\n  _s();\n  // Dados gerais da transação\n  const [tipo, setTipo] = useState('gasto'); // Novo campo: \"gasto\" ou \"recebivel\"\n  const [descricao, setDescricao] = useState('');\n  const [data, setData] = useState('');\n  const [valorTotal, setValorTotal] = useState('');\n\n  // Estados para seleção global de tags (para o documento pai)\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  // globalTags: objeto onde cada chave é o nome da categoria e o valor é um array de tags selecionadas\n  const [globalTags, setGlobalTags] = useState({});\n\n  // Estados para pagamentos (sub-transações)\n  const [pagamentos, setPagamentos] = useState([{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n\n  // Carregar categorias e tags do backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        // Inicializa globalTags com cada categoria como chave e array vazio\n        const initGlobal = {};\n        cats.forEach(cat => {\n          initGlobal[cat.nome] = [];\n        });\n        setGlobalTags(initGlobal);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Função para agrupar as tags por categoria\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        const catKey = tag.categoria;\n        if (!acc[catKey]) {\n          acc[catKey] = [];\n        }\n        acc[catKey].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n\n  // Atualiza a seleção de tags globais para o documento pai\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: selectedOptions\n    }));\n  };\n\n  // Funções para gerenciar pagamentos\n  const handlePagamentoChange = (index, field, value) => {\n    const novosPagamentos = [...pagamentos];\n    novosPagamentos[index][field] = value;\n    setPagamentos(novosPagamentos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    const novosPagamentos = [...pagamentos];\n    if (!novosPagamentos[index].paymentTags) {\n      novosPagamentos[index].paymentTags = {};\n    }\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\n    setPagamentos(novosPagamentos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novosPagamentos);\n  };\n\n  // Valida se a soma dos pagamentos é igual ao valor total\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pagamento) => acc + parseFloat(pagamento.valor || 0), 0);\n    return parseFloat(valorTotal) === soma;\n  };\n\n  // Submete o formulário\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const novaTransacao = {\n      tipo,\n      descricao,\n      data,\n      valor: parseFloat(valorTotal),\n      tags: globalTags,\n      // Envia um objeto com as tags globais agrupadas por categoria\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: parseFloat(pag.valor),\n        tags: pag.paymentTags // Também um objeto com tags por categoria para cada pagamento\n      }))\n    };\n    try {\n      await criarTransacao(novaTransacao);\n      alert('Transação criada com sucesso!');\n      if (onSuccess) onSuccess();\n      onClose();\n    } catch (error) {\n      console.error('Erro ao criar transação:', error);\n      alert('Erro ao criar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tipo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: tipo,\n          onChange: e => setTipo(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gasto\",\n            children: \"Gasto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"recebivel\",\n            children: \"Receb\\xEDvel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Descri\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: descricao,\n          onChange: e => setDescricao(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Data:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: data,\n          onChange: e => setData(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Valor Total:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          value: valorTotal,\n          onChange: e => setValorTotal(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section global-tags\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selecione Tags Globais\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag-dropdown-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [cat.nome, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: globalTags[cat.nome] || [],\n            onChange: e => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              handleGlobalTagChange(cat.nome, selected);\n            },\n            children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag.nome,\n              children: tag.nome\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this)]\n        }, cat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section pagamentos-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pagamentos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagamento-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pessoa:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: pagamento.pessoa,\n            onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Valor:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            step: \"0.01\",\n            value: pagamento.valor,\n            onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"payment-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Tags para este Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag-dropdown-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [cat.nome, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                multiple: true,\n                value: pagamento.paymentTags && pagamento.paymentTags[cat.nome] || [],\n                onChange: e => {\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\n                  handlePagamentoTagChange(index, cat.nome, selected);\n                },\n                children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tag.nome,\n                  children: tag.nome\n                }, tag.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 21\n              }, this)]\n            }, cat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => removePagamento(index),\n            children: \"Remover Pagamento\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: addPagamento,\n          children: \"Adicionar Pagamento\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Salvar Transa\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"OPhnUVq4FrpMrJqdkYoIc0JSS9c=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","criarTransacao","obterCategorias","obterTags","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","_s","tipo","setTipo","descricao","setDescricao","data","setData","valorTotal","setValorTotal","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","pessoa","valor","paymentTags","fetchData","cats","initGlobal","forEach","cat","nome","tgs","error","console","getTagsByCategory","reduce","acc","tag","categoria","catKey","push","tagsPorCategoria","handleGlobalTagChange","selectedOptions","prev","handlePagamentoChange","index","field","value","novosPagamentos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pagamento","parseFloat","handleSubmit","e","preventDefault","alert","novaTransacao","map","pag","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","target","required","type","step","multiple","selected","Array","from","option","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose }) => {\r\n  // Dados gerais da transação\r\n  const [tipo, setTipo] = useState('gasto'); // Novo campo: \"gasto\" ou \"recebivel\"\r\n  const [descricao, setDescricao] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [valorTotal, setValorTotal] = useState('');\r\n\r\n  // Estados para seleção global de tags (para o documento pai)\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  // globalTags: objeto onde cada chave é o nome da categoria e o valor é um array de tags selecionadas\r\n  const [globalTags, setGlobalTags] = useState({});\r\n\r\n  // Estados para pagamentos (sub-transações)\r\n  const [pagamentos, setPagamentos] = useState([\r\n    { pessoa: '', valor: '', paymentTags: {} }\r\n  ]);\r\n\r\n  // Carregar categorias e tags do backend\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        // Inicializa globalTags com cada categoria como chave e array vazio\r\n        const initGlobal = {};\r\n        cats.forEach(cat => {\r\n          initGlobal[cat.nome] = [];\r\n        });\r\n        setGlobalTags(initGlobal);\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função para agrupar as tags por categoria\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        const catKey = tag.categoria;\r\n        if (!acc[catKey]) {\r\n          acc[catKey] = [];\r\n        }\r\n        acc[catKey].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const tagsPorCategoria = getTagsByCategory();\r\n\r\n  // Atualiza a seleção de tags globais para o documento pai\r\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: selectedOptions\r\n    }));\r\n  };\r\n\r\n  // Funções para gerenciar pagamentos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    novosPagamentos[index][field] = value;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    if (!novosPagamentos[index].paymentTags) {\r\n      novosPagamentos[index].paymentTags = {};\r\n    }\r\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n\r\n  const removePagamento = (index) => {\r\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n\r\n  // Valida se a soma dos pagamentos é igual ao valor total\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pagamento) => acc + parseFloat(pagamento.valor || 0), 0);\r\n    return parseFloat(valorTotal) === soma;\r\n  };\r\n\r\n  // Submete o formulário\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const novaTransacao = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: parseFloat(valorTotal),\r\n      tags: globalTags,  // Envia um objeto com as tags globais agrupadas por categoria\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: parseFloat(pag.valor),\r\n        tags: pag.paymentTags  // Também um objeto com tags por categoria para cada pagamento\r\n      }))\r\n    };\r\n    try {\r\n      await criarTransacao(novaTransacao);\r\n      alert('Transação criada com sucesso!');\r\n      if (onSuccess) onSuccess();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Erro ao criar transação:', error);\r\n      alert('Erro ao criar transação.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>Nova Transação</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-section\">\r\n          <label>Tipo:</label>\r\n          <select value={tipo} onChange={e => setTipo(e.target.value)} required>\r\n            <option value=\"gasto\">Gasto</option>\r\n            <option value=\"recebivel\">Recebível</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <label>Descrição:</label>\r\n          <input type=\"text\" value={descricao} onChange={e => setDescricao(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <label>Data:</label>\r\n          <input type=\"date\" value={data} onChange={e => setData(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section\">\r\n          <label>Valor Total:</label>\r\n          <input type=\"number\" step=\"0.01\" value={valorTotal} onChange={e => setValorTotal(e.target.value)} required />\r\n        </div>\r\n        <div className=\"form-section global-tags\">\r\n          <h3>Selecione Tags Globais</h3>\r\n          {categorias.map(cat => (\r\n            <div key={cat.id} className=\"tag-dropdown-group\">\r\n              <label>{cat.nome}:</label>\r\n              <select multiple\r\n                value={globalTags[cat.nome] || []}\r\n                onChange={e => {\r\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                  handleGlobalTagChange(cat.nome, selected);\r\n                }}\r\n              >\r\n                {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                  <option key={tag.id} value={tag.nome}>\r\n                    {tag.nome}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"form-section pagamentos-section\">\r\n          <h3>Pagamentos</h3>\r\n          {pagamentos.map((pagamento, index) => (\r\n            <div key={index} className=\"pagamento-item\">\r\n              <label>Pessoa:</label>\r\n              <input type=\"text\" value={pagamento.pessoa} onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)} required />\r\n              <label>Valor:</label>\r\n              <input type=\"number\" step=\"0.01\" value={pagamento.valor} onChange={e => handlePagamentoChange(index, 'valor', e.target.value)} required />\r\n              <div className=\"payment-tags\">\r\n                <h4>Tags para este Pagamento</h4>\r\n                {categorias.map(cat => (\r\n                  <div key={cat.id} className=\"tag-dropdown-group\">\r\n                    <label>{cat.nome}:</label>\r\n                    <select multiple\r\n                      value={(pagamento.paymentTags && pagamento.paymentTags[cat.nome]) || []}\r\n                      onChange={e => {\r\n                        const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                        handlePagamentoTagChange(index, cat.nome, selected);\r\n                      }}\r\n                    >\r\n                      {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                        <option key={tag.id} value={tag.nome}>\r\n                          {tag.nome}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button type=\"button\" onClick={() => removePagamento(index)}>Remover Pagamento</button>\r\n              <hr />\r\n            </div>\r\n          ))}\r\n          <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n        </div>\r\n        <button type=\"submit\" className=\"submit-btn\">Salvar Transação</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}