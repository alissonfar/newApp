{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\pages\\\\Relatorio\\\\Relatorio.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { obterTransacoes, obterCategorias, obterTags } from '../../api.js';\nimport { exportDataToCSV } from '../../utils/export/exportData';\nimport { exportDataToPDF } from '../../utils/export/exportDataPdf';\nimport './Relatorio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorio = () => {\n  _s();\n  // Array achatado com base em pai + pagamentos\n  const [allPayments, setAllPayments] = useState([]);\n  // Resultado final após filtros (e depois de busca/ordenação)\n  const [filteredRows, setFilteredRows] = useState([]);\n\n  // Filtros\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [selectedTipo, setSelectedTipo] = useState('both');\n  const [selectedPessoas, setSelectedPessoas] = useState([]);\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [tagFilters, setTagFilters] = useState({});\n\n  // Sumário\n  const [summaryInfo, setSummaryInfo] = useState({});\n\n  // Exportação\n  const [exportFormat, setExportFormat] = useState('csv');\n\n  // Seleção rápida de datas\n  const [quickRange, setQuickRange] = useState('');\n\n  // -- NOVOS ESTADOS para PESQUISA e ORDENAÇÃO\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortColumn, setSortColumn] = useState('');\n  const [sortDirection, setSortDirection] = useState('asc');\n\n  // Carregamento inicial\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const transData = await obterTransacoes();\n        const transArray = transData.transacoes || [];\n\n        // Achatar cada transacao pai em vários registros (sem usar tags do pai)\n        const flattened = [];\n        transArray.forEach(tr => {\n          if (!tr.pagamentos || tr.pagamentos.length === 0) {\n            flattened.push({\n              parentId: tr.id,\n              dataPai: tr.data,\n              // pode vir em formato ISO ou YYYY-MM-DD\n              tipoPai: tr.tipo,\n              descricaoPai: tr.descricao,\n              valorPai: tr.valor,\n              pessoa: null,\n              valorPagamento: 0,\n              tagsPagamento: {}\n            });\n          } else {\n            tr.pagamentos.forEach(p => {\n              flattened.push({\n                parentId: tr.id,\n                dataPai: tr.data,\n                tipoPai: tr.tipo,\n                descricaoPai: tr.descricao,\n                valorPai: tr.valor,\n                pessoa: p.pessoa,\n                valorPagamento: p.valor,\n                tagsPagamento: p.tags || {}\n              });\n            });\n          }\n        });\n        setAllPayments(flattened);\n\n        // Carrega categorias e tags\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        const initTagFilters = {};\n        cats.forEach(cat => {\n          initTagFilters[cat.nome] = [];\n        });\n        setTagFilters(initTagFilters);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar dados para relatório:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Função que extrai pessoas únicas de um array achatado\n  const distinctPessoas = rows => {\n    const pessoasSet = new Set();\n    rows.forEach(row => {\n      if (row.pessoa) {\n        pessoasSet.add(row.pessoa);\n      }\n    });\n    return Array.from(pessoasSet);\n  };\n\n  // Agrupa as tags por categoria (para exibir nos filtros)\n  const tagsPorCategoria = tags.reduce((acc, tag) => {\n    if (tag.categoria) {\n      if (!acc[tag.categoria]) {\n        acc[tag.categoria] = [];\n      }\n      acc[tag.categoria].push(tag);\n    }\n    return acc;\n  }, {});\n\n  // Seleção rápida de datas\n  const handleQuickDateRange = option => {\n    const now = new Date();\n    let start, end;\n    switch (option) {\n      case 'MES_ATUAL':\n        start = new Date(now.getFullYear(), now.getMonth(), 1);\n        end = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n        break;\n      case 'MES_ANTERIOR':\n        const lastMonthDate = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n        start = new Date(lastMonthDate.getFullYear(), lastMonthDate.getMonth(), 1);\n        end = new Date(lastMonthDate.getFullYear(), lastMonthDate.getMonth() + 1, 0);\n        break;\n      case 'ULTIMOS_60_DIAS':\n        end = now;\n        start = new Date();\n        start.setDate(start.getDate() - 60);\n        break;\n      case 'ULTIMOS_30_DIAS':\n        end = now;\n        start = new Date();\n        start.setDate(start.getDate() - 30);\n        break;\n      case 'ULTIMOS_15_DIAS':\n        end = now;\n        start = new Date();\n        start.setDate(start.getDate() - 15);\n        break;\n      case 'ULTIMOS_7_DIAS':\n        end = now;\n        start = new Date();\n        start.setDate(start.getDate() - 7);\n        break;\n      default:\n        return;\n    }\n    const toStringDate = date => {\n      const yyyy = date.getFullYear();\n      const mm = String(date.getMonth() + 1).padStart(2, '0');\n      const dd = String(date.getDate()).padStart(2, '0');\n      return `${yyyy}-${mm}-${dd}`;\n    };\n    setDataInicio(toStringDate(start));\n    setDataFim(toStringDate(end));\n  };\n\n  // -------------------------\n  // Função principal de FILTRO + BUSCA + ORDENAÇÃO\n  // -------------------------\n  const applyFilters = () => {\n    let result = [...allPayments];\n\n    // 1) Filtro por data (pai)\n    if (dataInicio) {\n      result = result.filter(row => {\n        const [fullDate] = row.dataPai.split('T');\n        return fullDate >= dataInicio;\n      });\n    }\n    if (dataFim) {\n      result = result.filter(row => {\n        const [fullDate] = row.dataPai.split('T');\n        return fullDate <= dataFim;\n      });\n    }\n\n    // 2) Filtro por tipo (pai)\n    if (selectedTipo !== 'both') {\n      result = result.filter(row => row.tipoPai.toLowerCase() === selectedTipo);\n    }\n\n    // 3) Filtro por pessoas (pagamento)\n    if (selectedPessoas.length > 0) {\n      result = result.filter(row => row.pessoa && selectedPessoas.includes(row.pessoa));\n    }\n\n    // 4) Filtro por tags (pagamento)\n    Object.keys(tagFilters).forEach(cat => {\n      const selectedTags = tagFilters[cat];\n      if (selectedTags && selectedTags.length > 0) {\n        result = result.filter(row => {\n          const pagTags = row.tagsPagamento[cat] || [];\n          const pagMatch = pagTags.some(tag => selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase()));\n          return pagMatch;\n        });\n      }\n    });\n\n    // 5) Filtro de PESQUISA\n    if (searchTerm.trim() !== '') {\n      const lowerSearch = searchTerm.toLowerCase();\n      result = result.filter(row => {\n        var _row$descricaoPai, _row$pessoa;\n        const descMatch = (_row$descricaoPai = row.descricaoPai) === null || _row$descricaoPai === void 0 ? void 0 : _row$descricaoPai.toLowerCase().includes(lowerSearch);\n        const pessoaMatch = (_row$pessoa = row.pessoa) === null || _row$pessoa === void 0 ? void 0 : _row$pessoa.toLowerCase().includes(lowerSearch);\n        // Se quiser pesquisar por mais campos, basta adicionar\n        return descMatch || pessoaMatch;\n      });\n    }\n\n    // 6) ORDENAÇÃO\n    if (sortColumn) {\n      result.sort((a, b) => {\n        let valA = a[sortColumn];\n        let valB = b[sortColumn];\n\n        // Se for dataPai, comparar a string \"YYYY-MM-DD\" diretamente\n        if (sortColumn === 'dataPai') {\n          const [fullA] = (valA || '').split('T');\n          const [fullB] = (valB || '').split('T');\n          return sortDirection === 'asc' ? fullA.localeCompare(fullB) : fullB.localeCompare(fullA);\n        }\n        // Se for valorPagamento, comparar numericamente\n        else if (sortColumn === 'valorPagamento') {\n          const numA = parseFloat(valA) || 0;\n          const numB = parseFloat(valB) || 0;\n          return sortDirection === 'asc' ? numA - numB : numB - numA;\n        }\n        // Caso seja string (descricaoPai, pessoa, etc.)\n        else {\n          valA = (valA || '').toString().toLowerCase();\n          valB = (valB || '').toString().toLowerCase();\n          if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\n          if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\n          return 0;\n        }\n      });\n    }\n\n    // Seta o resultado final\n    setFilteredRows(result);\n  };\n\n  // Recalcula o sumário toda vez que filteredRows muda\n  useEffect(() => {\n    const totalTransactions = filteredRows.length;\n    const totalValueNumber = filteredRows.reduce((acc, row) => acc + parseFloat(row.valorPagamento || 0), 0);\n    const totalValue = totalValueNumber.toFixed(2);\n    const people = distinctPessoas(filteredRows);\n    const averagePerPerson = people.length > 0 ? (totalValueNumber / people.length).toFixed(2) : '0.00';\n\n    // Gastos x Recebíveis\n    const totalGastosNumber = filteredRows.filter(row => {\n      var _row$tipoPai;\n      return ((_row$tipoPai = row.tipoPai) === null || _row$tipoPai === void 0 ? void 0 : _row$tipoPai.toLowerCase()) === 'gasto';\n    }).reduce((acc, row) => acc + parseFloat(row.valorPagamento || 0), 0);\n    const totalRecebiveisNumber = filteredRows.filter(row => {\n      var _row$tipoPai2;\n      return ((_row$tipoPai2 = row.tipoPai) === null || _row$tipoPai2 === void 0 ? void 0 : _row$tipoPai2.toLowerCase()) === 'recebivel';\n    }).reduce((acc, row) => acc + parseFloat(row.valorPagamento || 0), 0);\n    const totalGastos = totalGastosNumber.toFixed(2);\n    const totalRecebiveis = totalRecebiveisNumber.toFixed(2);\n    const netValue = (totalRecebiveisNumber - totalGastosNumber).toFixed(2);\n    setSummaryInfo({\n      totalTransactions,\n      totalValue,\n      totalPeople: people.length,\n      averagePerPerson,\n      totalGastos,\n      totalRecebiveis,\n      netValue\n    });\n  }, [filteredRows]);\n\n  // Exportação\n  const handleExport = () => {\n    const filterDetails = {\n      dataInicio,\n      dataFim,\n      selectedTipo,\n      selectedPessoas,\n      tagFilters\n    };\n    if (exportFormat === 'csv') {\n      exportDataToCSV(filteredRows, 'relatorio.csv');\n    } else if (exportFormat === 'pdf') {\n      exportDataToPDF(filteredRows, filterDetails, summaryInfo, 'relatorio.pdf');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relatorio-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"relatorio-title\",\n      children: \"Relat\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Sele\\xE7\\xE3o R\\xE1pida de Datas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: quickRange,\n            onChange: e => {\n              const option = e.target.value;\n              setQuickRange(option);\n              handleQuickDateRange(option);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Selecione --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MES_ATUAL\",\n              children: \"M\\xEAs Atual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"MES_ANTERIOR\",\n              children: \"M\\xEAs Anterior\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ULTIMOS_60_DIAS\",\n              children: \"\\xDAltimos 60 Dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ULTIMOS_30_DIAS\",\n              children: \"\\xDAltimos 30 Dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ULTIMOS_15_DIAS\",\n              children: \"\\xDAltimos 15 Dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ULTIMOS_7_DIAS\",\n              children: \"\\xDAltimos 7 Dias\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data In\\xEDcio (Pai):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Fim (Pai):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pessoas (Pagamento):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: selectedPessoas,\n            onChange: e => {\n              const values = Array.from(e.target.selectedOptions, option => option.value);\n              setSelectedPessoas(values);\n            },\n            children: distinctPessoas(allPayments).map((p, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo de Transa\\xE7\\xE3o (Pai):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTipo,\n            onChange: e => setSelectedTipo(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"both\",\n              children: \"Ambos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gasto\",\n              children: \"Gasto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"recebivel\",\n              children: \"Receb\\xEDvel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [cat.nome, \" (Tags Pagamento):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: tagFilters[cat.nome] || [],\n            onChange: e => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              setTagFilters(prev => ({\n                ...prev,\n                [cat.nome]: selected\n              }));\n            },\n            children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag.nome,\n              children: tag.nome\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, cat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pesquisar:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: searchTerm,\n            onChange: e => setSearchTerm(e.target.value),\n            placeholder: \"Buscar descri\\xE7\\xE3o ou pessoa...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Ordenar por:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortColumn,\n            onChange: e => setSortColumn(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"--Nenhum--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dataPai\",\n              children: \"Data\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"descricaoPai\",\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pessoa\",\n              children: \"Pessoa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"valorPagamento\",\n              children: \"Valor (Pagamento)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: sortDirection,\n            onChange: e => setSortDirection(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asc\",\n              children: \"Ascendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"desc\",\n              children: \"Descendente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyFilters,\n            children: \"Filtrar/Buscar/Ordenar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Formato:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: exportFormat,\n            onChange: e => setExportFormat(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"csv\",\n              children: \"CSV\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pdf\",\n              children: \"PDF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleExport,\n            children: \"Exportar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Resumo dos Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-sections\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Informa\\xE7\\xF5es Gerais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total de \\u201CTransa\\xE7\\xF5es\\u201D (Pagamentos):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: summaryInfo.totalTransactions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total em Valor:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 454,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"R$\", summaryInfo.totalValue]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"N\\xFAmero de Pessoas:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 458,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: summaryInfo.totalPeople\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"M\\xE9dia por Pessoa:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"R$\", summaryInfo.averagePerPerson]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Detalhes Financeiros\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total de Gastos:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"R$\", summaryInfo.totalGastos]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Total de Receb\\xEDveis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"R$\", summaryInfo.totalRecebiveis]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Saldo (Receb\\xEDveis - Gastos):\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"R$\", summaryInfo.netValue]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relatorio-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Resultados (\", filteredRows.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this), filteredRows.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"relatorio-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descri\\xE7\\xE3o (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pessoa (Pagamento)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor (Pagamento)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tipo (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tags (Pagamento)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: filteredRows.map((row, idx) => {\n            // Exibir dataPai (pode estar no formato ISO)\n            const [fullDate] = row.dataPai.split('T');\n            const [year, month, day] = fullDate.split('-');\n            const displayDate = year && month && day ? `${day}/${month}/${year}` : row.dataPai; // fallback\n\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.descricaoPai\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 513,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: displayDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.pessoa || '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\"R$\", parseFloat(row.valorPagamento || 0).toFixed(2)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: row.tipoPai\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: Object.keys(row.tagsPagamento || {}).map((catName, i) => row.tagsPagamento[catName].map((tagName, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-chip relatorio-tag-chip pag-tag-chip\",\n                  children: [catName, \": \", tagName]\n                }, `pag-${i}-${j}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 27\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum registro encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorio, \"6IGP1krnfTCdsA23tZ5ACTwAfcM=\");\n_c = Relatorio;\nexport default Relatorio;\nvar _c;\n$RefreshReg$(_c, \"Relatorio\");","map":{"version":3,"names":["React","useEffect","useState","obterTransacoes","obterCategorias","obterTags","exportDataToCSV","exportDataToPDF","jsxDEV","_jsxDEV","Relatorio","_s","allPayments","setAllPayments","filteredRows","setFilteredRows","dataInicio","setDataInicio","dataFim","setDataFim","selectedTipo","setSelectedTipo","selectedPessoas","setSelectedPessoas","categorias","setCategorias","tags","setTags","tagFilters","setTagFilters","summaryInfo","setSummaryInfo","exportFormat","setExportFormat","quickRange","setQuickRange","searchTerm","setSearchTerm","sortColumn","setSortColumn","sortDirection","setSortDirection","fetchData","transData","transArray","transacoes","flattened","forEach","tr","pagamentos","length","push","parentId","id","dataPai","data","tipoPai","tipo","descricaoPai","descricao","valorPai","valor","pessoa","valorPagamento","tagsPagamento","p","cats","initTagFilters","cat","nome","tgs","error","console","distinctPessoas","rows","pessoasSet","Set","row","add","Array","from","tagsPorCategoria","reduce","acc","tag","categoria","handleQuickDateRange","option","now","Date","start","end","getFullYear","getMonth","lastMonthDate","setDate","getDate","toStringDate","date","yyyy","mm","String","padStart","dd","applyFilters","result","filter","fullDate","split","toLowerCase","includes","Object","keys","selectedTags","pagTags","pagMatch","some","map","t","trim","lowerSearch","_row$descricaoPai","_row$pessoa","descMatch","pessoaMatch","sort","a","b","valA","valB","fullA","fullB","localeCompare","numA","parseFloat","numB","toString","totalTransactions","totalValueNumber","totalValue","toFixed","people","averagePerPerson","totalGastosNumber","_row$tipoPai","totalRecebiveisNumber","_row$tipoPai2","totalGastos","totalRecebiveis","netValue","totalPeople","handleExport","filterDetails","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","multiple","values","selectedOptions","idx","selected","prev","placeholder","onClick","year","month","day","displayDate","catName","i","tagName","j","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/pages/Relatorio/Relatorio.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { obterTransacoes, obterCategorias, obterTags } from '../../api.js';\r\nimport { exportDataToCSV } from '../../utils/export/exportData';\r\nimport { exportDataToPDF } from '../../utils/export/exportDataPdf';\r\nimport './Relatorio.css';\r\n\r\nconst Relatorio = () => {\r\n  // Array achatado com base em pai + pagamentos\r\n  const [allPayments, setAllPayments] = useState([]);\r\n  // Resultado final após filtros (e depois de busca/ordenação)\r\n  const [filteredRows, setFilteredRows] = useState([]);\r\n\r\n  // Filtros\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [selectedTipo, setSelectedTipo] = useState('both');\r\n  const [selectedPessoas, setSelectedPessoas] = useState([]);\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [tagFilters, setTagFilters] = useState({});\r\n\r\n  // Sumário\r\n  const [summaryInfo, setSummaryInfo] = useState({});\r\n\r\n  // Exportação\r\n  const [exportFormat, setExportFormat] = useState('csv');\r\n\r\n  // Seleção rápida de datas\r\n  const [quickRange, setQuickRange] = useState('');\r\n\r\n  // -- NOVOS ESTADOS para PESQUISA e ORDENAÇÃO\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [sortColumn, setSortColumn] = useState('');\r\n  const [sortDirection, setSortDirection] = useState('asc');\r\n\r\n  // Carregamento inicial\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const transData = await obterTransacoes();\r\n        const transArray = transData.transacoes || [];\r\n\r\n        // Achatar cada transacao pai em vários registros (sem usar tags do pai)\r\n        const flattened = [];\r\n        transArray.forEach((tr) => {\r\n          if (!tr.pagamentos || tr.pagamentos.length === 0) {\r\n            flattened.push({\r\n              parentId: tr.id,\r\n              dataPai: tr.data, // pode vir em formato ISO ou YYYY-MM-DD\r\n              tipoPai: tr.tipo,\r\n              descricaoPai: tr.descricao,\r\n              valorPai: tr.valor,\r\n              pessoa: null,\r\n              valorPagamento: 0,\r\n              tagsPagamento: {}\r\n            });\r\n          } else {\r\n            tr.pagamentos.forEach((p) => {\r\n              flattened.push({\r\n                parentId: tr.id,\r\n                dataPai: tr.data,\r\n                tipoPai: tr.tipo,\r\n                descricaoPai: tr.descricao,\r\n                valorPai: tr.valor,\r\n                pessoa: p.pessoa,\r\n                valorPagamento: p.valor,\r\n                tagsPagamento: p.tags || {}\r\n              });\r\n            });\r\n          }\r\n        });\r\n\r\n        setAllPayments(flattened);\r\n\r\n        // Carrega categorias e tags\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        const initTagFilters = {};\r\n        cats.forEach(cat => {\r\n          initTagFilters[cat.nome] = [];\r\n        });\r\n        setTagFilters(initTagFilters);\r\n\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados para relatório:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Função que extrai pessoas únicas de um array achatado\r\n  const distinctPessoas = (rows) => {\r\n    const pessoasSet = new Set();\r\n    rows.forEach(row => {\r\n      if (row.pessoa) {\r\n        pessoasSet.add(row.pessoa);\r\n      }\r\n    });\r\n    return Array.from(pessoasSet);\r\n  };\r\n\r\n  // Agrupa as tags por categoria (para exibir nos filtros)\r\n  const tagsPorCategoria = tags.reduce((acc, tag) => {\r\n    if (tag.categoria) {\r\n      if (!acc[tag.categoria]) {\r\n        acc[tag.categoria] = [];\r\n      }\r\n      acc[tag.categoria].push(tag);\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  // Seleção rápida de datas\r\n  const handleQuickDateRange = (option) => {\r\n    const now = new Date();\r\n    let start, end;\r\n\r\n    switch (option) {\r\n      case 'MES_ATUAL':\r\n        start = new Date(now.getFullYear(), now.getMonth(), 1);\r\n        end = new Date(now.getFullYear(), now.getMonth() + 1, 0);\r\n        break;\r\n      case 'MES_ANTERIOR':\r\n        const lastMonthDate = new Date(now.getFullYear(), now.getMonth() - 1, 1);\r\n        start = new Date(lastMonthDate.getFullYear(), lastMonthDate.getMonth(), 1);\r\n        end = new Date(lastMonthDate.getFullYear(), lastMonthDate.getMonth() + 1, 0);\r\n        break;\r\n      case 'ULTIMOS_60_DIAS':\r\n        end = now;\r\n        start = new Date();\r\n        start.setDate(start.getDate() - 60);\r\n        break;\r\n      case 'ULTIMOS_30_DIAS':\r\n        end = now;\r\n        start = new Date();\r\n        start.setDate(start.getDate() - 30);\r\n        break;\r\n      case 'ULTIMOS_15_DIAS':\r\n        end = now;\r\n        start = new Date();\r\n        start.setDate(start.getDate() - 15);\r\n        break;\r\n      case 'ULTIMOS_7_DIAS':\r\n        end = now;\r\n        start = new Date();\r\n        start.setDate(start.getDate() - 7);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n\r\n    const toStringDate = (date) => {\r\n      const yyyy = date.getFullYear();\r\n      const mm = String(date.getMonth() + 1).padStart(2, '0');\r\n      const dd = String(date.getDate()).padStart(2, '0');\r\n      return `${yyyy}-${mm}-${dd}`;\r\n    };\r\n\r\n    setDataInicio(toStringDate(start));\r\n    setDataFim(toStringDate(end));\r\n  };\r\n\r\n  // -------------------------\r\n  // Função principal de FILTRO + BUSCA + ORDENAÇÃO\r\n  // -------------------------\r\n  const applyFilters = () => {\r\n    let result = [...allPayments];\r\n\r\n    // 1) Filtro por data (pai)\r\n    if (dataInicio) {\r\n      result = result.filter(row => {\r\n        const [fullDate] = row.dataPai.split('T'); \r\n        return fullDate >= dataInicio;\r\n      });\r\n    }\r\n    if (dataFim) {\r\n      result = result.filter(row => {\r\n        const [fullDate] = row.dataPai.split('T');\r\n        return fullDate <= dataFim;\r\n      });\r\n    }\r\n\r\n    // 2) Filtro por tipo (pai)\r\n    if (selectedTipo !== 'both') {\r\n      result = result.filter(row => row.tipoPai.toLowerCase() === selectedTipo);\r\n    }\r\n\r\n    // 3) Filtro por pessoas (pagamento)\r\n    if (selectedPessoas.length > 0) {\r\n      result = result.filter(row => row.pessoa && selectedPessoas.includes(row.pessoa));\r\n    }\r\n\r\n    // 4) Filtro por tags (pagamento)\r\n    Object.keys(tagFilters).forEach(cat => {\r\n      const selectedTags = tagFilters[cat];\r\n      if (selectedTags && selectedTags.length > 0) {\r\n        result = result.filter(row => {\r\n          const pagTags = row.tagsPagamento[cat] || [];\r\n          const pagMatch = pagTags.some(tag =>\r\n            selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase())\r\n          );\r\n          return pagMatch;\r\n        });\r\n      }\r\n    });\r\n\r\n    // 5) Filtro de PESQUISA\r\n    if (searchTerm.trim() !== '') {\r\n      const lowerSearch = searchTerm.toLowerCase();\r\n      result = result.filter(row => {\r\n        const descMatch = row.descricaoPai?.toLowerCase().includes(lowerSearch);\r\n        const pessoaMatch = row.pessoa?.toLowerCase().includes(lowerSearch);\r\n        // Se quiser pesquisar por mais campos, basta adicionar\r\n        return descMatch || pessoaMatch;\r\n      });\r\n    }\r\n\r\n    // 6) ORDENAÇÃO\r\n    if (sortColumn) {\r\n      result.sort((a, b) => {\r\n        let valA = a[sortColumn];\r\n        let valB = b[sortColumn];\r\n\r\n        // Se for dataPai, comparar a string \"YYYY-MM-DD\" diretamente\r\n        if (sortColumn === 'dataPai') {\r\n          const [fullA] = (valA || '').split('T');\r\n          const [fullB] = (valB || '').split('T');\r\n          return sortDirection === 'asc'\r\n            ? fullA.localeCompare(fullB)\r\n            : fullB.localeCompare(fullA);\r\n        }\r\n        // Se for valorPagamento, comparar numericamente\r\n        else if (sortColumn === 'valorPagamento') {\r\n          const numA = parseFloat(valA) || 0;\r\n          const numB = parseFloat(valB) || 0;\r\n          return sortDirection === 'asc'\r\n            ? numA - numB\r\n            : numB - numA;\r\n        }\r\n        // Caso seja string (descricaoPai, pessoa, etc.)\r\n        else {\r\n          valA = (valA || '').toString().toLowerCase();\r\n          valB = (valB || '').toString().toLowerCase();\r\n          if (valA < valB) return sortDirection === 'asc' ? -1 : 1;\r\n          if (valA > valB) return sortDirection === 'asc' ? 1 : -1;\r\n          return 0;\r\n        }\r\n      });\r\n    }\r\n\r\n    // Seta o resultado final\r\n    setFilteredRows(result);\r\n  };\r\n\r\n  // Recalcula o sumário toda vez que filteredRows muda\r\n  useEffect(() => {\r\n    const totalTransactions = filteredRows.length;\r\n    const totalValueNumber = filteredRows.reduce(\r\n      (acc, row) => acc + parseFloat(row.valorPagamento || 0),\r\n      0\r\n    );\r\n    const totalValue = totalValueNumber.toFixed(2);\r\n\r\n    const people = distinctPessoas(filteredRows);\r\n    const averagePerPerson = people.length > 0\r\n      ? (totalValueNumber / people.length).toFixed(2)\r\n      : '0.00';\r\n\r\n    // Gastos x Recebíveis\r\n    const totalGastosNumber = filteredRows\r\n      .filter(row => row.tipoPai?.toLowerCase() === 'gasto')\r\n      .reduce((acc, row) => acc + parseFloat(row.valorPagamento || 0), 0);\r\n    const totalRecebiveisNumber = filteredRows\r\n      .filter(row => row.tipoPai?.toLowerCase() === 'recebivel')\r\n      .reduce((acc, row) => acc + parseFloat(row.valorPagamento || 0), 0);\r\n\r\n    const totalGastos = totalGastosNumber.toFixed(2);\r\n    const totalRecebiveis = totalRecebiveisNumber.toFixed(2);\r\n    const netValue = (totalRecebiveisNumber - totalGastosNumber).toFixed(2);\r\n\r\n    setSummaryInfo({\r\n      totalTransactions,\r\n      totalValue,\r\n      totalPeople: people.length,\r\n      averagePerPerson,\r\n      totalGastos,\r\n      totalRecebiveis,\r\n      netValue\r\n    });\r\n  }, [filteredRows]);\r\n\r\n  // Exportação\r\n  const handleExport = () => {\r\n    const filterDetails = {\r\n      dataInicio,\r\n      dataFim,\r\n      selectedTipo,\r\n      selectedPessoas,\r\n      tagFilters\r\n    };\r\n\r\n    if (exportFormat === 'csv') {\r\n      exportDataToCSV(filteredRows, 'relatorio.csv');\r\n    } else if (exportFormat === 'pdf') {\r\n      exportDataToPDF(filteredRows, filterDetails, summaryInfo, 'relatorio.pdf');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relatorio-container\">\r\n      <h2 className=\"relatorio-title\">Relatórios</h2>\r\n\r\n      <div className=\"top-section\">\r\n        {/* Painel de Filtros */}\r\n        <div className=\"filter-panel\">\r\n          {/* Seleção rápida de datas */}\r\n          <div className=\"filter-group\">\r\n            <label>Seleção Rápida de Datas:</label>\r\n            <select\r\n              value={quickRange}\r\n              onChange={e => {\r\n                const option = e.target.value;\r\n                setQuickRange(option);\r\n                handleQuickDateRange(option);\r\n              }}\r\n            >\r\n              <option value=\"\">-- Selecione --</option>\r\n              <option value=\"MES_ATUAL\">Mês Atual</option>\r\n              <option value=\"MES_ANTERIOR\">Mês Anterior</option>\r\n              <option value=\"ULTIMOS_60_DIAS\">Últimos 60 Dias</option>\r\n              <option value=\"ULTIMOS_30_DIAS\">Últimos 30 Dias</option>\r\n              <option value=\"ULTIMOS_15_DIAS\">Últimos 15 Dias</option>\r\n              <option value=\"ULTIMOS_7_DIAS\">Últimos 7 Dias</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            <label>Data Início (Pai):</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dataInicio}\r\n              onChange={e => setDataInicio(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"filter-group\">\r\n            <label>Data Fim (Pai):</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dataFim}\r\n              onChange={e => setDataFim(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            <label>Pessoas (Pagamento):</label>\r\n            <select\r\n              multiple\r\n              value={selectedPessoas}\r\n              onChange={e => {\r\n                const values = Array.from(e.target.selectedOptions, option => option.value);\r\n                setSelectedPessoas(values);\r\n              }}\r\n            >\r\n              {distinctPessoas(allPayments).map((p, idx) => (\r\n                <option key={idx} value={p}>{p}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            <label>Tipo de Transação (Pai):</label>\r\n            <select value={selectedTipo} onChange={e => setSelectedTipo(e.target.value)}>\r\n              <option value=\"both\">Ambos</option>\r\n              <option value=\"gasto\">Gasto</option>\r\n              <option value=\"recebivel\">Recebível</option>\r\n            </select>\r\n          </div>\r\n\r\n          {categorias.map(cat => (\r\n            <div key={cat.id} className=\"filter-group\">\r\n              <label>{cat.nome} (Tags Pagamento):</label>\r\n              <select\r\n                multiple\r\n                value={tagFilters[cat.nome] || []}\r\n                onChange={e => {\r\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                  setTagFilters(prev => ({ ...prev, [cat.nome]: selected }));\r\n                }}\r\n              >\r\n                {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                  <option key={tag.id} value={tag.nome}>{tag.nome}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"filter-group\">\r\n            {/* PESQUISA */}\r\n            <label>Pesquisar:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={e => setSearchTerm(e.target.value)}\r\n              placeholder=\"Buscar descrição ou pessoa...\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            {/* ORDENAÇÃO */}\r\n            <label>Ordenar por:</label>\r\n            <select value={sortColumn} onChange={e => setSortColumn(e.target.value)}>\r\n              <option value=\"\">--Nenhum--</option>\r\n              <option value=\"dataPai\">Data</option>\r\n              <option value=\"descricaoPai\">Descrição</option>\r\n              <option value=\"pessoa\">Pessoa</option>\r\n              <option value=\"valorPagamento\">Valor (Pagamento)</option>\r\n            </select>\r\n            <select value={sortDirection} onChange={e => setSortDirection(e.target.value)}>\r\n              <option value=\"asc\">Ascendente</option>\r\n              <option value=\"desc\">Descendente</option>\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            <button onClick={applyFilters}>Filtrar/Buscar/Ordenar</button>\r\n          </div>\r\n\r\n          <div className=\"filter-group\">\r\n            <label>Formato:</label>\r\n            <select value={exportFormat} onChange={e => setExportFormat(e.target.value)}>\r\n              <option value=\"csv\">CSV</option>\r\n              <option value=\"pdf\">PDF</option>\r\n            </select>\r\n            <button onClick={handleExport}>Exportar</button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Painel de Resumo */}\r\n        <div className=\"summary-panel\">\r\n          <h3>Resumo dos Resultados</h3>\r\n          <div className=\"summary-sections\">\r\n\r\n            {/* Bloco 1: informações gerais */}\r\n            <div className=\"summary-section\">\r\n              <h4>Informações Gerais</h4>\r\n              <div className=\"summary-item\">\r\n                <span>Total de “Transações” (Pagamentos):</span>\r\n                <span>{summaryInfo.totalTransactions}</span>\r\n              </div>\r\n              <div className=\"summary-item\">\r\n                <span>Total em Valor:</span>\r\n                <span>R${summaryInfo.totalValue}</span>\r\n              </div>\r\n              <div className=\"summary-item\">\r\n                <span>Número de Pessoas:</span>\r\n                <span>{summaryInfo.totalPeople}</span>\r\n              </div>\r\n              <div className=\"summary-item\">\r\n                <span>Média por Pessoa:</span>\r\n                <span>R${summaryInfo.averagePerPerson}</span>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Bloco 2: detalhes financeiros */}\r\n            <div className=\"summary-section\">\r\n              <h4>Detalhes Financeiros</h4>\r\n              <div className=\"summary-item\">\r\n                <span>Total de Gastos:</span>\r\n                <span>R${summaryInfo.totalGastos}</span>\r\n              </div>\r\n              <div className=\"summary-item\">\r\n                <span>Total de Recebíveis:</span>\r\n                <span>R${summaryInfo.totalRecebiveis}</span>\r\n              </div>\r\n              <div className=\"summary-item\">\r\n                <span>Saldo (Recebíveis - Gastos):</span>\r\n                <span>R${summaryInfo.netValue}</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relatorio-results\">\r\n        <h3>Resultados ({filteredRows.length})</h3>\r\n        {filteredRows.length > 0 ? (\r\n          <table className=\"relatorio-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Descrição (Pai)</th>\r\n                <th>Data (Pai)</th>\r\n                <th>Pessoa (Pagamento)</th>\r\n                <th>Valor (Pagamento)</th>\r\n                <th>Tipo (Pai)</th>\r\n                <th>Tags (Pagamento)</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {filteredRows.map((row, idx) => {\r\n                // Exibir dataPai (pode estar no formato ISO)\r\n                const [fullDate] = row.dataPai.split('T');\r\n                const [year, month, day] = fullDate.split('-');\r\n                const displayDate = (year && month && day)\r\n                  ? `${day}/${month}/${year}`\r\n                  : row.dataPai; // fallback\r\n\r\n                return (\r\n                  <tr key={idx}>\r\n                    <td>{row.descricaoPai}</td>\r\n                    <td>{displayDate}</td>\r\n                    <td>{row.pessoa || '—'}</td>\r\n                    <td>R${parseFloat(row.valorPagamento || 0).toFixed(2)}</td>\r\n                    <td>{row.tipoPai}</td>\r\n                    <td>\r\n                      {Object.keys(row.tagsPagamento || {}).map((catName, i) =>\r\n                        row.tagsPagamento[catName].map((tagName, j) => (\r\n                          <span key={`pag-${i}-${j}`} className=\"tag-chip relatorio-tag-chip pag-tag-chip\">\r\n                            {catName}: {tagName}\r\n                          </span>\r\n                        ))\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>Nenhum registro encontrado.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Relatorio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}