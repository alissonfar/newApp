{"ast":null,"code":"// src/api.js\nconst API_BASE = 'http://localhost:3001/api';\nexport async function obterTransacoes(params = {}) {\n  const query = new URLSearchParams(params).toString();\n  const resposta = await fetch(`${API_BASE}/transacoes?${query}`);\n  return await resposta.json();\n}\nexport async function criarTransacao(transacao) {\n  const resposta = await fetch(`${API_BASE}/transacoes`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(transacao)\n  });\n  return await resposta.json();\n}\nexport async function atualizarTransacao(id, transacao) {\n  const resposta = await fetch(`${API_BASE}/transacoes/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(transacao)\n  });\n  return await resposta.json();\n}\nexport async function excluirTransacao(id) {\n  const resposta = await fetch(`${API_BASE}/transacoes/${id}`, {\n    method: 'DELETE'\n  });\n  return await resposta.json();\n}\nexport async function obterRelatorio() {\n  const resposta = await fetch(`${API_BASE}/relatorio`);\n  return await resposta.json();\n}\nexport async function obterTags() {\n  const resposta = await fetch(`${API_BASE}/tags`);\n  return await resposta.json();\n}\nexport async function criarTag(tag) {\n  const resposta = await fetch(`${API_BASE}/tags`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(tag)\n  });\n  return await resposta.json();\n}\nexport async function atualizarTag(id, tag) {\n  const resposta = await fetch(`${API_BASE}/tags/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(tag)\n  });\n  return await resposta.json();\n}\nexport async function excluirTag(id) {\n  const resposta = await fetch(`${API_BASE}/tags/${id}`, {\n    method: 'DELETE'\n  });\n  return await resposta.json();\n}\nexport async function obterCategorias() {\n  const resposta = await fetch(`${API_BASE}/categorias`);\n  return await resposta.json();\n}\nexport async function criarCategoria(categoria) {\n  const resposta = await fetch(`${API_BASE}/categorias`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(categoria)\n  });\n  return await resposta.json();\n}\nexport async function atualizarCategoria(id, categoria) {\n  const resposta = await fetch(`${API_BASE}/categorias/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(categoria)\n  });\n  return await resposta.json();\n}\nexport async function excluirCategoria(id) {\n  const resposta = await fetch(`${API_BASE}/categorias/${id}`, {\n    method: 'DELETE'\n  });\n  return await resposta.json();\n}","map":{"version":3,"names":["API_BASE","obterTransacoes","params","query","URLSearchParams","toString","resposta","fetch","json","criarTransacao","transacao","method","headers","body","JSON","stringify","atualizarTransacao","id","excluirTransacao","obterRelatorio","obterTags","criarTag","tag","atualizarTag","excluirTag","obterCategorias","criarCategoria","categoria","atualizarCategoria","excluirCategoria"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/api.js"],"sourcesContent":["// src/api.js\r\nconst API_BASE = 'http://localhost:3001/api';\r\n\r\nexport async function obterTransacoes(params = {}) {\r\n  const query = new URLSearchParams(params).toString();\r\n  const resposta = await fetch(`${API_BASE}/transacoes?${query}`);\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function criarTransacao(transacao) {\r\n  const resposta = await fetch(`${API_BASE}/transacoes`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(transacao)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function atualizarTransacao(id, transacao) {\r\n  const resposta = await fetch(`${API_BASE}/transacoes/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(transacao)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function excluirTransacao(id) {\r\n  const resposta = await fetch(`${API_BASE}/transacoes/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function obterRelatorio() {\r\n  const resposta = await fetch(`${API_BASE}/relatorio`);\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function obterTags() {\r\n  const resposta = await fetch(`${API_BASE}/tags`);\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function criarTag(tag) {\r\n  const resposta = await fetch(`${API_BASE}/tags`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(tag)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function atualizarTag(id, tag) {\r\n  const resposta = await fetch(`${API_BASE}/tags/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(tag)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function excluirTag(id) {\r\n  const resposta = await fetch(`${API_BASE}/tags/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function obterCategorias() {\r\n  const resposta = await fetch(`${API_BASE}/categorias`);\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function criarCategoria(categoria) {\r\n  const resposta = await fetch(`${API_BASE}/categorias`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(categoria)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function atualizarCategoria(id, categoria) {\r\n  const resposta = await fetch(`${API_BASE}/categorias/${id}`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(categoria)\r\n  });\r\n  return await resposta.json();\r\n}\r\n\r\nexport async function excluirCategoria(id) {\r\n  const resposta = await fetch(`${API_BASE}/categorias/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await resposta.json();\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}