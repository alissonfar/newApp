{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\components\\\\Transaction\\\\NovaTransacaoForm.js\",\n  _s = $RefreshSig$();\n// src/components/Transaction/NovaTransacaoForm.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\nimport './NovaTransacaoForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NovaTransacaoForm = ({\n  onSuccess,\n  onClose\n}) => {\n  _s();\n  // Estados dos dados gerais\n  const [tipo, setTipo] = useState('gasto');\n  const [descricao, setDescricao] = useState('');\n  const [data, setData] = useState('');\n  const [valorTotal, setValorTotal] = useState('');\n\n  // Estados para sugestões (exemplo estático)\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\n\n  // Estados para global tags\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de tags selecionadas\n  const [globalTags, setGlobalTags] = useState({});\n\n  // Estados para pagamentos (sub-transações)\n  const [pagamentos, setPagamentos] = useState([{\n    pessoa: '',\n    valor: '',\n    paymentTags: {}\n  }]);\n  // Exemplo de sugestões para \"pessoa\"\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\n\n  // Refs para foco\n  const descricaoRef = useRef(null);\n  const dataRef = useRef(null);\n  const valorRef = useRef(null);\n\n  // Função para centralizar o campo com foco\n  const handleFocus = e => {\n    e.target.scrollIntoView({\n      behavior: 'smooth',\n      block: 'center'\n    });\n  };\n\n  // Carregar categorias e tags do backend\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const cats = await obterCategorias();\n        setCategorias(cats);\n        // Inicializa o objeto globalTags com cada categoria como chave e array vazio\n        const initGlobal = {};\n        cats.forEach(cat => {\n          initGlobal[cat.nome] = [];\n        });\n        setGlobalTags(initGlobal);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar categorias ou tags:', error);\n      }\n    }\n    fetchData();\n    // Define a data padrão para hoje\n    const hoje = new Date().toISOString().split('T')[0];\n    setData(hoje);\n  }, []);\n\n  // Função para agrupar as tags por categoria\n  const getTagsByCategory = () => {\n    return tags.reduce((acc, tag) => {\n      if (tag.categoria) {\n        const catKey = tag.categoria;\n        if (!acc[catKey]) {\n          acc[catKey] = [];\n        }\n        acc[catKey].push(tag);\n      }\n      return acc;\n    }, {});\n  };\n  const tagsPorCategoria = getTagsByCategory();\n\n  // Atualiza a seleção global de tags\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\n    setGlobalTags(prev => ({\n      ...prev,\n      [categoria]: selectedOptions\n    }));\n  };\n\n  // Funções para pagamentos\n  const handlePagamentoChange = (index, field, value) => {\n    const novosPagamentos = [...pagamentos];\n    novosPagamentos[index][field] = value;\n    setPagamentos(novosPagamentos);\n  };\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\n    const novosPagamentos = [...pagamentos];\n    if (!novosPagamentos[index].paymentTags) {\n      novosPagamentos[index].paymentTags = {};\n    }\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\n    setPagamentos(novosPagamentos);\n  };\n  const addPagamento = () => {\n    setPagamentos([...pagamentos, {\n      pessoa: '',\n      valor: '',\n      paymentTags: {}\n    }]);\n  };\n  const removePagamento = index => {\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\n    setPagamentos(novosPagamentos);\n  };\n\n  // Validação: soma dos pagamentos deve ser igual ao valor total\n  const validatePagamentos = () => {\n    const soma = pagamentos.reduce((acc, pag) => {\n      const valor = parseFloat(pag.valor || 0);\n      return acc + (isNaN(valor) ? 0 : valor);\n    }, 0);\n    return parseFloat(valorTotal) === soma;\n  };\n\n  // Atalho: Ctrl+S para salvar e continuar\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.ctrlKey && e.key === 's') {\n        e.preventDefault();\n        handleSubmit(e, false);\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  });\n\n  // Botões para data\n  const setHoje = () => {\n    const hoje = new Date().toISOString().split('T')[0];\n    setData(hoje);\n  };\n  const setOntem = () => {\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\n    setData(ontem);\n  };\n\n  // Ao alterar o valor total, sincroniza o valor do primeiro pagamento (se existir somente um pagamento)\n  const handleValorTotalChange = e => {\n    const raw = e.target.value;\n    setValorTotal(raw);\n    if (pagamentos.length === 1) {\n      handlePagamentoChange(0, 'valor', raw);\n    }\n  };\n\n  // Função de submit\n  const handleSubmit = async (e, closeModal = true) => {\n    e.preventDefault();\n    if (!validatePagamentos()) {\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\n      return;\n    }\n    const novaTransacao = {\n      tipo,\n      descricao,\n      data,\n      valor: parseFloat(valorTotal),\n      tags: globalTags,\n      pagamentos: pagamentos.map(pag => ({\n        pessoa: pag.pessoa,\n        valor: parseFloat(pag.valor),\n        tags: pag.paymentTags\n      }))\n    };\n    try {\n      await criarTransacao(novaTransacao);\n      alert('Transação registrada com sucesso!');\n      if (onSuccess) onSuccess();\n      if (closeModal) {\n        onClose();\n      } else {\n        // Limpa os campos para continuar\n        setDescricao('');\n        setValorTotal('');\n        setGlobalTags(prev => {\n          const novo = {\n            ...prev\n          };\n          Object.keys(novo).forEach(key => novo[key] = []);\n          return novo;\n        });\n        setPagamentos([{\n          pessoa: '',\n          valor: '',\n          paymentTags: {}\n        }]);\n        if (descricaoRef.current) {\n          descricaoRef.current.focus();\n        }\n      }\n    } catch (error) {\n      console.error('Erro ao criar transação:', error);\n      alert('Erro ao criar transação.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nova-transacao-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nova Transa\\xE7\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, true),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: tipo,\n              onChange: e => setTipo(e.target.value),\n              required: true,\n              onFocus: handleFocus,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"gasto\",\n                children: \"Gasto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"recebivel\",\n                children: \"Receb\\xEDvel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Descri\\xE7\\xE3o:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: descricao,\n              onChange: e => setDescricao(e.target.value),\n              required: true,\n              list: \"descricao-suggestions\",\n              onFocus: handleFocus,\n              ref: descricaoRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n              id: \"descricao-suggestions\",\n              children: descricaoSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: sug\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Data:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: data,\n              onChange: e => setData(e.target.value),\n              required: true,\n              onFocus: handleFocus,\n              ref: dataRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-shortcuts\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setHoje,\n                children: \"Hoje\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: setOntem,\n                children: \"Ontem\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Valor Total:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: valorTotal,\n              onChange: handleValorTotalChange,\n              required: true,\n              onFocus: handleFocus,\n              ref: valorRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section global-tags\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Tags Globais\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag-dropdown-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [cat.nome, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                multiple: true,\n                value: globalTags[cat.nome] || [],\n                onChange: e => {\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\n                  handleGlobalTagChange(cat.nome, selected);\n                },\n                onFocus: handleFocus,\n                children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: tag.nome,\n                  children: tag.nome\n                }, tag.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, cat.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section pagamentos-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pagamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), pagamentos.map((pagamento, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagamento-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Pessoa:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pagamento.pessoa,\n                  onChange: e => handlePagamentoChange(index, 'pessoa', e.target.value),\n                  required: true,\n                  list: \"pessoa-suggestions\",\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                  id: \"pessoa-suggestions\",\n                  children: pessoaSuggestions.map((sug, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sug\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Valor:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: pagamento.valor,\n                  onChange: e => handlePagamentoChange(index, 'valor', e.target.value),\n                  required: true,\n                  onFocus: handleFocus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-section payment-tags\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Tags para Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 21\n                }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tag-dropdown-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [cat.nome, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    multiple: true,\n                    value: pagamento.paymentTags && pagamento.paymentTags[cat.nome] || [],\n                    onChange: e => {\n                      const selected = Array.from(e.target.selectedOptions, option => option.value);\n                      handlePagamentoTagChange(index, cat.nome, selected);\n                    },\n                    onFocus: handleFocus,\n                    children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: tag.nome,\n                      children: tag.nome\n                    }, tag.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 25\n                  }, this)]\n                }, cat.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => removePagamento(index),\n                children: \"Remover Pagamento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: addPagamento,\n              children: \"Adicionar Pagamento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, true),\n          children: \"Salvar e Fechar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"submit-btn\",\n          onClick: e => handleSubmit(e, false),\n          children: \"Salvar e Continuar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(NovaTransacaoForm, \"a3cVzAbLlINNyDdeFqdu5yJNhJ0=\");\n_c = NovaTransacaoForm;\nexport default NovaTransacaoForm;\nvar _c;\n$RefreshReg$(_c, \"NovaTransacaoForm\");","map":{"version":3,"names":["React","useEffect","useState","useRef","criarTransacao","obterCategorias","obterTags","jsxDEV","_jsxDEV","NovaTransacaoForm","onSuccess","onClose","_s","tipo","setTipo","descricao","setDescricao","data","setData","valorTotal","setValorTotal","descricaoSuggestions","categorias","setCategorias","tags","setTags","globalTags","setGlobalTags","pagamentos","setPagamentos","pessoa","valor","paymentTags","pessoaSuggestions","descricaoRef","dataRef","valorRef","handleFocus","e","target","scrollIntoView","behavior","block","fetchData","cats","initGlobal","forEach","cat","nome","tgs","error","console","hoje","Date","toISOString","split","getTagsByCategory","reduce","acc","tag","categoria","catKey","push","tagsPorCategoria","handleGlobalTagChange","selectedOptions","prev","handlePagamentoChange","index","field","value","novosPagamentos","handlePagamentoTagChange","addPagamento","removePagamento","filter","_","i","validatePagamentos","soma","pag","parseFloat","isNaN","handleKeyDown","ctrlKey","key","preventDefault","handleSubmit","window","addEventListener","removeEventListener","setHoje","setOntem","ontem","now","handleValorTotalChange","raw","length","closeModal","alert","novaTransacao","map","novo","Object","keys","current","focus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","onFocus","type","list","ref","id","sug","idx","onClick","multiple","selected","Array","from","option","pagamento","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/components/Transaction/NovaTransacaoForm.js"],"sourcesContent":["// src/components/Transaction/NovaTransacaoForm.js\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport { criarTransacao, obterCategorias, obterTags } from '../../api.js';\r\nimport './NovaTransacaoForm.css';\r\n\r\nconst NovaTransacaoForm = ({ onSuccess, onClose }) => {\r\n  // Estados dos dados gerais\r\n  const [tipo, setTipo] = useState('gasto');\r\n  const [descricao, setDescricao] = useState('');\r\n  const [data, setData] = useState('');\r\n  const [valorTotal, setValorTotal] = useState('');\r\n  \r\n  // Estados para sugestões (exemplo estático)\r\n  const descricaoSuggestions = ['Compra de pizza', 'Pagamento de conta', 'Arbitragem'];\r\n  \r\n  // Estados para global tags\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  // globalTags: objeto onde a chave é o nome da categoria e o valor é um array de tags selecionadas\r\n  const [globalTags, setGlobalTags] = useState({});\r\n  \r\n  // Estados para pagamentos (sub-transações)\r\n  const [pagamentos, setPagamentos] = useState([\r\n    { pessoa: '', valor: '', paymentTags: {} }\r\n  ]);\r\n  // Exemplo de sugestões para \"pessoa\"\r\n  const pessoaSuggestions = ['Eu', 'Alisson', 'Emerson'];\r\n  \r\n  // Refs para foco\r\n  const descricaoRef = useRef(null);\r\n  const dataRef = useRef(null);\r\n  const valorRef = useRef(null);\r\n  \r\n  // Função para centralizar o campo com foco\r\n  const handleFocus = (e) => {\r\n    e.target.scrollIntoView({ behavior: 'smooth', block: 'center' });\r\n  };\r\n  \r\n  // Carregar categorias e tags do backend\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n        // Inicializa o objeto globalTags com cada categoria como chave e array vazio\r\n        const initGlobal = {};\r\n        cats.forEach(cat => {\r\n          initGlobal[cat.nome] = [];\r\n        });\r\n        setGlobalTags(initGlobal);\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar categorias ou tags:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n    // Define a data padrão para hoje\r\n    const hoje = new Date().toISOString().split('T')[0];\r\n    setData(hoje);\r\n  }, []);\r\n  \r\n  // Função para agrupar as tags por categoria\r\n  const getTagsByCategory = () => {\r\n    return tags.reduce((acc, tag) => {\r\n      if (tag.categoria) {\r\n        const catKey = tag.categoria;\r\n        if (!acc[catKey]) {\r\n          acc[catKey] = [];\r\n        }\r\n        acc[catKey].push(tag);\r\n      }\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  const tagsPorCategoria = getTagsByCategory();\r\n  \r\n  // Atualiza a seleção global de tags\r\n  const handleGlobalTagChange = (categoria, selectedOptions) => {\r\n    setGlobalTags(prev => ({\r\n      ...prev,\r\n      [categoria]: selectedOptions\r\n    }));\r\n  };\r\n  \r\n  // Funções para pagamentos\r\n  const handlePagamentoChange = (index, field, value) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    novosPagamentos[index][field] = value;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n  \r\n  const handlePagamentoTagChange = (index, categoria, selectedOptions) => {\r\n    const novosPagamentos = [...pagamentos];\r\n    if (!novosPagamentos[index].paymentTags) {\r\n      novosPagamentos[index].paymentTags = {};\r\n    }\r\n    novosPagamentos[index].paymentTags[categoria] = selectedOptions;\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n  \r\n  const addPagamento = () => {\r\n    setPagamentos([...pagamentos, { pessoa: '', valor: '', paymentTags: {} }]);\r\n  };\r\n  \r\n  const removePagamento = (index) => {\r\n    const novosPagamentos = pagamentos.filter((_, i) => i !== index);\r\n    setPagamentos(novosPagamentos);\r\n  };\r\n  \r\n  // Validação: soma dos pagamentos deve ser igual ao valor total\r\n  const validatePagamentos = () => {\r\n    const soma = pagamentos.reduce((acc, pag) => {\r\n      const valor = parseFloat(pag.valor || 0);\r\n      return acc + (isNaN(valor) ? 0 : valor);\r\n    }, 0);\r\n    return parseFloat(valorTotal) === soma;\r\n  };\r\n  \r\n  // Atalho: Ctrl+S para salvar e continuar\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if (e.ctrlKey && e.key === 's') {\r\n        e.preventDefault();\r\n        handleSubmit(e, false);\r\n      }\r\n    };\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => window.removeEventListener('keydown', handleKeyDown);\r\n  });\r\n  \r\n  // Botões para data\r\n  const setHoje = () => {\r\n    const hoje = new Date().toISOString().split('T')[0];\r\n    setData(hoje);\r\n  };\r\n  \r\n  const setOntem = () => {\r\n    const ontem = new Date(Date.now() - 86400000).toISOString().split('T')[0];\r\n    setData(ontem);\r\n  };\r\n  \r\n  // Ao alterar o valor total, sincroniza o valor do primeiro pagamento (se existir somente um pagamento)\r\n  const handleValorTotalChange = (e) => {\r\n    const raw = e.target.value;\r\n    setValorTotal(raw);\r\n    if (pagamentos.length === 1) {\r\n      handlePagamentoChange(0, 'valor', raw);\r\n    }\r\n  };\r\n  \r\n  // Função de submit\r\n  const handleSubmit = async (e, closeModal = true) => {\r\n    e.preventDefault();\r\n    if (!validatePagamentos()) {\r\n      alert('A soma dos pagamentos deve ser igual ao valor total.');\r\n      return;\r\n    }\r\n    const novaTransacao = {\r\n      tipo,\r\n      descricao,\r\n      data,\r\n      valor: parseFloat(valorTotal),\r\n      tags: globalTags,\r\n      pagamentos: pagamentos.map(pag => ({\r\n        pessoa: pag.pessoa,\r\n        valor: parseFloat(pag.valor),\r\n        tags: pag.paymentTags\r\n      }))\r\n    };\r\n    try {\r\n      await criarTransacao(novaTransacao);\r\n      alert('Transação registrada com sucesso!');\r\n      if (onSuccess) onSuccess();\r\n      if (closeModal) {\r\n        onClose();\r\n      } else {\r\n        // Limpa os campos para continuar\r\n        setDescricao('');\r\n        setValorTotal('');\r\n        setGlobalTags(prev => {\r\n          const novo = { ...prev };\r\n          Object.keys(novo).forEach(key => novo[key] = []);\r\n          return novo;\r\n        });\r\n        setPagamentos([{ pessoa: '', valor: '', paymentTags: {} }]);\r\n        if (descricaoRef.current) {\r\n          descricaoRef.current.focus();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Erro ao criar transação:', error);\r\n      alert('Erro ao criar transação.');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"nova-transacao-form-container\">\r\n      <h2>Nova Transação</h2>\r\n      <form onSubmit={(e) => handleSubmit(e, true)}>\r\n        <div className=\"form-grid\">\r\n          <div className=\"left-column\">\r\n            <div className=\"form-section\">\r\n              <label>Tipo:</label>\r\n              <select \r\n                value={tipo} \r\n                onChange={e => setTipo(e.target.value)} \r\n                required \r\n                onFocus={handleFocus}\r\n              >\r\n                <option value=\"gasto\">Gasto</option>\r\n                <option value=\"recebivel\">Recebível</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Descrição:</label>\r\n              <input \r\n                type=\"text\" \r\n                value={descricao} \r\n                onChange={e => setDescricao(e.target.value)} \r\n                required \r\n                list=\"descricao-suggestions\"\r\n                onFocus={handleFocus}\r\n                ref={descricaoRef}\r\n              />\r\n              <datalist id=\"descricao-suggestions\">\r\n                {descricaoSuggestions.map((sug, idx) => (\r\n                  <option key={idx} value={sug} />\r\n                ))}\r\n              </datalist>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Data:</label>\r\n              <input \r\n                type=\"date\" \r\n                value={data} \r\n                onChange={e => setData(e.target.value)} \r\n                required \r\n                onFocus={handleFocus}\r\n                ref={dataRef}\r\n              />\r\n              <div className=\"date-shortcuts\">\r\n                <button type=\"button\" onClick={setHoje}>Hoje</button>\r\n                <button type=\"button\" onClick={setOntem}>Ontem</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-section\">\r\n              <label>Valor Total:</label>\r\n              <input \r\n                type=\"text\" \r\n                value={valorTotal} \r\n                onChange={handleValorTotalChange} \r\n                required \r\n                onFocus={handleFocus}\r\n                ref={valorRef}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"right-column\">\r\n            <div className=\"form-section global-tags\">\r\n              <h3>Tags Globais</h3>\r\n              {categorias.map(cat => (\r\n                <div key={cat.id} className=\"tag-dropdown-group\">\r\n                  <label>{cat.nome}:</label>\r\n                  <select multiple\r\n                    value={globalTags[cat.nome] || []}\r\n                    onChange={e => {\r\n                      const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                      handleGlobalTagChange(cat.nome, selected);\r\n                    }}\r\n                    onFocus={handleFocus}\r\n                  >\r\n                    {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                      <option key={tag.id} value={tag.nome}>\r\n                        {tag.nome}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"form-section pagamentos-section\">\r\n              <h3>Pagamentos</h3>\r\n              {pagamentos.map((pagamento, index) => (\r\n                <div key={index} className=\"pagamento-item\">\r\n                  <div className=\"form-section\">\r\n                    <label>Pessoa:</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      value={pagamento.pessoa} \r\n                      onChange={e => handlePagamentoChange(index, 'pessoa', e.target.value)} \r\n                      required \r\n                      list=\"pessoa-suggestions\"\r\n                      onFocus={handleFocus}\r\n                    />\r\n                    <datalist id=\"pessoa-suggestions\">\r\n                      {pessoaSuggestions.map((sug, idx) => (\r\n                        <option key={idx} value={sug} />\r\n                      ))}\r\n                    </datalist>\r\n                  </div>\r\n                  <div className=\"form-section\">\r\n                    <label>Valor:</label>\r\n                    <input \r\n                      type=\"text\" \r\n                      value={pagamento.valor} \r\n                      onChange={e => handlePagamentoChange(index, 'valor', e.target.value)} \r\n                      required \r\n                      onFocus={handleFocus}\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-section payment-tags\">\r\n                    <h4>Tags para Pagamento</h4>\r\n                    {categorias.map(cat => (\r\n                      <div key={cat.id} className=\"tag-dropdown-group\">\r\n                        <label>{cat.nome}:</label>\r\n                        <select multiple\r\n                          value={(pagamento.paymentTags && pagamento.paymentTags[cat.nome]) || []}\r\n                          onChange={e => {\r\n                            const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                            handlePagamentoTagChange(index, cat.nome, selected);\r\n                          }}\r\n                          onFocus={handleFocus}\r\n                        >\r\n                          {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                            <option key={tag.id} value={tag.nome}>\r\n                              {tag.nome}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  <button type=\"button\" onClick={() => removePagamento(index)}>Remover Pagamento</button>\r\n                  <hr />\r\n                </div>\r\n              ))}\r\n              <button type=\"button\" onClick={addPagamento}>Adicionar Pagamento</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-buttons\">\r\n          <button type=\"submit\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, true)}>Salvar e Fechar</button>\r\n          <button type=\"button\" className=\"submit-btn\" onClick={(e) => handleSubmit(e, false)}>Salvar e Continuar</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaTransacaoForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}