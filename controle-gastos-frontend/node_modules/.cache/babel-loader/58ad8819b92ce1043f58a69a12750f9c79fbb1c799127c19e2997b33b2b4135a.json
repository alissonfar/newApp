{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alisson\\\\Desktop\\\\NEWAPP CONTROLE FINANCEIRO\\\\controle-gastos-frontend\\\\src\\\\pages\\\\Relatorio\\\\Relatorio.js\",\n  _s = $RefreshSig$();\n// src/pages/Relatorio/Relatorio.js\nimport React, { useEffect, useState } from 'react';\nimport { obterTransacoes, obterCategorias, obterTags } from '../../api.js';\nimport './Relatorio.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Relatorio = () => {\n  _s();\n  const [transacoes, setTransacoes] = useState([]);\n  const [filteredTransacoes, setFilteredTransacoes] = useState([]);\n\n  // Filtros\n  const [dataInicio, setDataInicio] = useState('');\n  const [dataFim, setDataFim] = useState('');\n  const [selectedPessoas, setSelectedPessoas] = useState([]);\n  const [selectedTipo, setSelectedTipo] = useState('both');\n  const [categorias, setCategorias] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [tagFilters, setTagFilters] = useState({});\n\n  // Resumo dos resultados\n  const [summaryInfo, setSummaryInfo] = useState({});\n\n  // Carregamento inicial\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const transData = await obterTransacoes();\n        const transArray = transData.transacoes || [];\n        setTransacoes(transArray);\n        setFilteredTransacoes(transArray);\n        const cats = await obterCategorias();\n        setCategorias(cats);\n\n        // Inicializa tagFilters para cada categoria\n        const initTagFilters = {};\n        cats.forEach(cat => {\n          initTagFilters[cat.nome] = [];\n        });\n        setTagFilters(initTagFilters);\n        const tgs = await obterTags();\n        setTags(tgs);\n      } catch (error) {\n        console.error('Erro ao carregar dados para relatório:', error);\n      }\n    }\n    fetchData();\n  }, []);\n\n  // Extrair pessoas únicas (a partir dos pagamentos)\n  const distinctPessoas = dataArray => {\n    const pessoasSet = new Set();\n    dataArray.forEach(tr => {\n      if (tr.pagamentos) {\n        tr.pagamentos.forEach(p => {\n          if (p.pessoa) pessoasSet.add(p.pessoa);\n        });\n      }\n    });\n    return Array.from(pessoasSet);\n  };\n\n  // Agrupar tags por categoria a partir da lista de tags\n  const tagsPorCategoria = tags.reduce((acc, tag) => {\n    if (tag.categoria) {\n      if (!acc[tag.categoria]) {\n        acc[tag.categoria] = [];\n      }\n      acc[tag.categoria].push(tag);\n    }\n    return acc;\n  }, {});\n\n  // Aplicar filtros\n  const applyFilters = () => {\n    let result = transacoes;\n\n    // Filtro por data\n    if (dataInicio) {\n      result = result.filter(tr => new Date(tr.data) >= new Date(dataInicio));\n    }\n    if (dataFim) {\n      result = result.filter(tr => new Date(tr.data) <= new Date(dataFim));\n    }\n\n    // Filtro por tipo\n    if (selectedTipo !== 'both') {\n      result = result.filter(tr => tr.tipo.toLowerCase() === selectedTipo);\n    }\n\n    // Filtro por pessoas\n    if (selectedPessoas.length > 0) {\n      result = result.filter(tr => tr.pagamentos && tr.pagamentos.some(p => selectedPessoas.includes(p.pessoa)));\n    }\n\n    // Filtro por tags (pai + pagamentos)\n    Object.keys(tagFilters).forEach(cat => {\n      const selectedTags = tagFilters[cat];\n      if (selectedTags && selectedTags.length > 0) {\n        result = result.filter(tr => {\n          // Verifica tags no pai\n          const parentMatch = tr.tags && tr.tags[cat] && tr.tags[cat].some(tag => selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase()));\n\n          // Verifica tags nos pagamentos\n          const paymentsMatch = tr.pagamentos && tr.pagamentos.some(p => p.tags && p.tags[cat] && p.tags[cat].some(tag => selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase())));\n          return parentMatch || paymentsMatch;\n        });\n      }\n    });\n    setFilteredTransacoes(result);\n  };\n\n  // Calcular resumo baseado no valor total do \"pai\"\n  useEffect(() => {\n    const totalTransactions = filteredTransacoes.length;\n\n    // Soma de valores do pai\n    const totalValueNumber = filteredTransacoes.reduce((acc, tr) => acc + parseFloat(tr.valor || 0), 0);\n    const totalValue = totalValueNumber.toFixed(2);\n\n    // Pessoas distintas dentro do conjunto filtrado\n    const people = distinctPessoas(filteredTransacoes);\n\n    // Média por pessoa\n    const averagePerPerson = people.length > 0 ? (totalValueNumber / people.length).toFixed(2) : '0.00';\n    setSummaryInfo({\n      totalTransactions,\n      totalValue,\n      totalPeople: people.length,\n      averagePerPerson,\n      filters: {\n        dataInicio,\n        dataFim,\n        selectedTipo,\n        selectedPessoas,\n        tagFilters\n      }\n    });\n  }, [filteredTransacoes, dataInicio, dataFim, selectedTipo, selectedPessoas, tagFilters]);\n\n  // Aqui \"achplanamos\" cada transacao em várias linhas, uma por pagamento\n  const flattenedRows = [];\n  filteredTransacoes.forEach(tr => {\n    if (!tr.pagamentos || tr.pagamentos.length === 0) {\n      // Se não houver pagamentos, cria uma linha \"vazia\"\n      flattenedRows.push({\n        transacao: tr,\n        pagamento: null\n      });\n    } else {\n      tr.pagamentos.forEach(p => {\n        flattenedRows.push({\n          transacao: tr,\n          pagamento: p\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relatorio-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"relatorio-title\",\n      children: \"Relat\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data In\\xEDcio:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataInicio,\n            onChange: e => setDataInicio(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Data Fim:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            value: dataFim,\n            onChange: e => setDataFim(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Pessoas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: selectedPessoas,\n            onChange: e => {\n              const values = Array.from(e.target.selectedOptions, option => option.value);\n              setSelectedPessoas(values);\n            },\n            children: distinctPessoas(transacoes).map((p, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p,\n              children: p\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tipo de Transa\\xE7\\xE3o:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: selectedTipo,\n            onChange: e => setSelectedTipo(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"both\",\n              children: \"Ambos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"gasto\",\n              children: \"Gasto\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"recebivel\",\n              children: \"Receb\\xEDvel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), categorias.map(cat => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [cat.nome, \" (Tags):\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            multiple: true,\n            value: tagFilters[cat.nome] || [],\n            onChange: e => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              setTagFilters(prev => ({\n                ...prev,\n                [cat.nome]: selected\n              }));\n            },\n            children: (tagsPorCategoria[cat.nome] || []).map(tag => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: tag.nome,\n              children: tag.nome\n            }, tag.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, cat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyFilters,\n            children: \"Filtrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Resumo dos Resultados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total de Transa\\xE7\\xF5es (Pai):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 14\n          }, this), \" \", summaryInfo.totalTransactions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total em Valor (Pai):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 14\n          }, this), \" R$\", summaryInfo.totalValue]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"N\\xFAmero de Pessoas:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 14\n          }, this), \" \", summaryInfo.totalPeople]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"M\\xE9dia por Pessoa:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 14\n          }, this), \" R$\", summaryInfo.averagePerPerson]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"applied-filters\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Filtros Aplicados:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data In\\xEDcio:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 16\n            }, this), \" \", dataInicio || 'Todos']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Data Fim:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 16\n            }, this), \" \", dataFim || 'Todos']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tipo:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 16\n            }, this), \" \", selectedTipo === 'both' ? 'Ambos' : selectedTipo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Pessoas:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 16\n            }, this), \" \", selectedPessoas.length > 0 ? selectedPessoas.join(', ') : 'Todas']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), Object.keys(tagFilters).map(cat => {\n            const chosenTags = tagFilters[cat] || [];\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [cat, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 19\n              }, this), \" \", chosenTags.length > 0 ? chosenTags.join(', ') : 'Todas']\n            }, cat, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relatorio-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Resultados (\", flattenedRows.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), flattenedRows.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"relatorio-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Descri\\xE7\\xE3o (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Data (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Pessoa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Valor (Pagamento)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tipo (Pai)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: flattenedRows.map((row, idx) => {\n            const tr = row.transacao;\n            const p = row.pagamento;\n            // Pai tags\n            const paiTags = tr.tags || {};\n            // Pagamento tags\n            const pagTags = p && p.tags ? p.tags : {};\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: tr.descricao\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(tr.data).toLocaleDateString('pt-BR', {\n                  timeZone: 'UTC'\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p ? p.pessoa : '—'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: p ? `R$${parseFloat(p.valor).toFixed(2)}` : `R$${parseFloat(tr.valor).toFixed(2)}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: tr.tipo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [Object.keys(paiTags).map((catName, i) => paiTags[catName].map((tagName, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-chip relatorio-tag-chip\",\n                  children: [\"[Pai] \", catName, \": \", tagName]\n                }, `pai-${i}-${j}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 27\n                }, this))), Object.keys(pagTags).map((catName, i) => pagTags[catName].map((tagName, j) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-chip relatorio-tag-chip pag-tag-chip\",\n                  children: [\"[Pag] \", catName, \": \", tagName]\n                }, `pag-${i}-${j}`, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 27\n                }, this)))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nenhum registro encontrado.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Relatorio, \"IQ8Vv7dc6ZwBbwsO5V6psvQKtmQ=\");\n_c = Relatorio;\nexport default Relatorio;\nvar _c;\n$RefreshReg$(_c, \"Relatorio\");","map":{"version":3,"names":["React","useEffect","useState","obterTransacoes","obterCategorias","obterTags","jsxDEV","_jsxDEV","Relatorio","_s","transacoes","setTransacoes","filteredTransacoes","setFilteredTransacoes","dataInicio","setDataInicio","dataFim","setDataFim","selectedPessoas","setSelectedPessoas","selectedTipo","setSelectedTipo","categorias","setCategorias","tags","setTags","tagFilters","setTagFilters","summaryInfo","setSummaryInfo","fetchData","transData","transArray","cats","initTagFilters","forEach","cat","nome","tgs","error","console","distinctPessoas","dataArray","pessoasSet","Set","tr","pagamentos","p","pessoa","add","Array","from","tagsPorCategoria","reduce","acc","tag","categoria","push","applyFilters","result","filter","Date","data","tipo","toLowerCase","length","some","includes","Object","keys","selectedTags","parentMatch","map","t","paymentsMatch","totalTransactions","totalValueNumber","parseFloat","valor","totalValue","toFixed","people","averagePerPerson","totalPeople","filters","flattenedRows","transacao","pagamento","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","multiple","values","selectedOptions","option","idx","selected","prev","id","onClick","join","chosenTags","row","paiTags","pagTags","descricao","toLocaleDateString","timeZone","catName","i","tagName","j","_c","$RefreshReg$"],"sources":["C:/Users/Alisson/Desktop/NEWAPP CONTROLE FINANCEIRO/controle-gastos-frontend/src/pages/Relatorio/Relatorio.js"],"sourcesContent":["// src/pages/Relatorio/Relatorio.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { obterTransacoes, obterCategorias, obterTags } from '../../api.js';\r\nimport './Relatorio.css';\r\n\r\nconst Relatorio = () => {\r\n  const [transacoes, setTransacoes] = useState([]);\r\n  const [filteredTransacoes, setFilteredTransacoes] = useState([]);\r\n\r\n  // Filtros\r\n  const [dataInicio, setDataInicio] = useState('');\r\n  const [dataFim, setDataFim] = useState('');\r\n  const [selectedPessoas, setSelectedPessoas] = useState([]);\r\n  const [selectedTipo, setSelectedTipo] = useState('both');\r\n  const [categorias, setCategorias] = useState([]);\r\n  const [tags, setTags] = useState([]);\r\n  const [tagFilters, setTagFilters] = useState({});\r\n\r\n  // Resumo dos resultados\r\n  const [summaryInfo, setSummaryInfo] = useState({});\r\n\r\n  // Carregamento inicial\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        const transData = await obterTransacoes();\r\n        const transArray = transData.transacoes || [];\r\n        setTransacoes(transArray);\r\n        setFilteredTransacoes(transArray);\r\n\r\n        const cats = await obterCategorias();\r\n        setCategorias(cats);\r\n\r\n        // Inicializa tagFilters para cada categoria\r\n        const initTagFilters = {};\r\n        cats.forEach(cat => {\r\n          initTagFilters[cat.nome] = [];\r\n        });\r\n        setTagFilters(initTagFilters);\r\n\r\n        const tgs = await obterTags();\r\n        setTags(tgs);\r\n      } catch (error) {\r\n        console.error('Erro ao carregar dados para relatório:', error);\r\n      }\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Extrair pessoas únicas (a partir dos pagamentos)\r\n  const distinctPessoas = (dataArray) => {\r\n    const pessoasSet = new Set();\r\n    dataArray.forEach(tr => {\r\n      if (tr.pagamentos) {\r\n        tr.pagamentos.forEach(p => {\r\n          if (p.pessoa) pessoasSet.add(p.pessoa);\r\n        });\r\n      }\r\n    });\r\n    return Array.from(pessoasSet);\r\n  };\r\n\r\n  // Agrupar tags por categoria a partir da lista de tags\r\n  const tagsPorCategoria = tags.reduce((acc, tag) => {\r\n    if (tag.categoria) {\r\n      if (!acc[tag.categoria]) {\r\n        acc[tag.categoria] = [];\r\n      }\r\n      acc[tag.categoria].push(tag);\r\n    }\r\n    return acc;\r\n  }, {});\r\n\r\n  // Aplicar filtros\r\n  const applyFilters = () => {\r\n    let result = transacoes;\r\n\r\n    // Filtro por data\r\n    if (dataInicio) {\r\n      result = result.filter(tr => new Date(tr.data) >= new Date(dataInicio));\r\n    }\r\n    if (dataFim) {\r\n      result = result.filter(tr => new Date(tr.data) <= new Date(dataFim));\r\n    }\r\n\r\n    // Filtro por tipo\r\n    if (selectedTipo !== 'both') {\r\n      result = result.filter(tr => tr.tipo.toLowerCase() === selectedTipo);\r\n    }\r\n\r\n    // Filtro por pessoas\r\n    if (selectedPessoas.length > 0) {\r\n      result = result.filter(tr =>\r\n        tr.pagamentos &&\r\n        tr.pagamentos.some(p => selectedPessoas.includes(p.pessoa))\r\n      );\r\n    }\r\n\r\n    // Filtro por tags (pai + pagamentos)\r\n    Object.keys(tagFilters).forEach(cat => {\r\n      const selectedTags = tagFilters[cat];\r\n      if (selectedTags && selectedTags.length > 0) {\r\n        result = result.filter(tr => {\r\n          // Verifica tags no pai\r\n          const parentMatch = tr.tags &&\r\n            tr.tags[cat] &&\r\n            tr.tags[cat].some(tag =>\r\n              selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase())\r\n            );\r\n\r\n          // Verifica tags nos pagamentos\r\n          const paymentsMatch = tr.pagamentos &&\r\n            tr.pagamentos.some(p =>\r\n              p.tags &&\r\n              p.tags[cat] &&\r\n              p.tags[cat].some(tag =>\r\n                selectedTags.map(t => t.toLowerCase()).includes(tag.toLowerCase())\r\n              )\r\n            );\r\n\r\n          return parentMatch || paymentsMatch;\r\n        });\r\n      }\r\n    });\r\n\r\n    setFilteredTransacoes(result);\r\n  };\r\n\r\n  // Calcular resumo baseado no valor total do \"pai\"\r\n  useEffect(() => {\r\n    const totalTransactions = filteredTransacoes.length;\r\n\r\n    // Soma de valores do pai\r\n    const totalValueNumber = filteredTransacoes.reduce(\r\n      (acc, tr) => acc + parseFloat(tr.valor || 0),\r\n      0\r\n    );\r\n    const totalValue = totalValueNumber.toFixed(2);\r\n\r\n    // Pessoas distintas dentro do conjunto filtrado\r\n    const people = distinctPessoas(filteredTransacoes);\r\n\r\n    // Média por pessoa\r\n    const averagePerPerson = people.length > 0\r\n      ? (totalValueNumber / people.length).toFixed(2)\r\n      : '0.00';\r\n\r\n    setSummaryInfo({\r\n      totalTransactions,\r\n      totalValue,\r\n      totalPeople: people.length,\r\n      averagePerPerson,\r\n      filters: {\r\n        dataInicio,\r\n        dataFim,\r\n        selectedTipo,\r\n        selectedPessoas,\r\n        tagFilters\r\n      }\r\n    });\r\n  }, [filteredTransacoes, dataInicio, dataFim, selectedTipo, selectedPessoas, tagFilters]);\r\n\r\n  // Aqui \"achplanamos\" cada transacao em várias linhas, uma por pagamento\r\n  const flattenedRows = [];\r\n  filteredTransacoes.forEach(tr => {\r\n    if (!tr.pagamentos || tr.pagamentos.length === 0) {\r\n      // Se não houver pagamentos, cria uma linha \"vazia\"\r\n      flattenedRows.push({\r\n        transacao: tr,\r\n        pagamento: null,\r\n      });\r\n    } else {\r\n      tr.pagamentos.forEach(p => {\r\n        flattenedRows.push({\r\n          transacao: tr,\r\n          pagamento: p,\r\n        });\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"relatorio-container\">\r\n      <h2 className=\"relatorio-title\">Relatórios</h2>\r\n\r\n      <div className=\"top-section\">\r\n        {/* Painel de Filtros */}\r\n        <div className=\"filter-panel\">\r\n          <div className=\"filter-group\">\r\n            <label>Data Início:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dataInicio}\r\n              onChange={e => setDataInicio(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"filter-group\">\r\n            <label>Data Fim:</label>\r\n            <input\r\n              type=\"date\"\r\n              value={dataFim}\r\n              onChange={e => setDataFim(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\"filter-group\">\r\n            <label>Pessoas:</label>\r\n            <select\r\n              multiple\r\n              value={selectedPessoas}\r\n              onChange={e => {\r\n                const values = Array.from(e.target.selectedOptions, option => option.value);\r\n                setSelectedPessoas(values);\r\n              }}\r\n            >\r\n              {distinctPessoas(transacoes).map((p, idx) => (\r\n                <option key={idx} value={p}>{p}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div className=\"filter-group\">\r\n            <label>Tipo de Transação:</label>\r\n            <select value={selectedTipo} onChange={e => setSelectedTipo(e.target.value)}>\r\n              <option value=\"both\">Ambos</option>\r\n              <option value=\"gasto\">Gasto</option>\r\n              <option value=\"recebivel\">Recebível</option>\r\n            </select>\r\n          </div>\r\n          {categorias.map(cat => (\r\n            <div key={cat.id} className=\"filter-group\">\r\n              <label>{cat.nome} (Tags):</label>\r\n              <select\r\n                multiple\r\n                value={tagFilters[cat.nome] || []}\r\n                onChange={e => {\r\n                  const selected = Array.from(e.target.selectedOptions, option => option.value);\r\n                  setTagFilters(prev => ({ ...prev, [cat.nome]: selected }));\r\n                }}\r\n              >\r\n                {(tagsPorCategoria[cat.nome] || []).map(tag => (\r\n                  <option key={tag.id} value={tag.nome}>{tag.nome}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          ))}\r\n          <div className=\"filter-group\">\r\n            <button onClick={applyFilters}>Filtrar</button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Painel de Resumo */}\r\n        <div className=\"summary-panel\">\r\n          <h3>Resumo dos Resultados</h3>\r\n          <p><strong>Total de Transações (Pai):</strong> {summaryInfo.totalTransactions}</p>\r\n          <p><strong>Total em Valor (Pai):</strong> R${summaryInfo.totalValue}</p>\r\n          <p><strong>Número de Pessoas:</strong> {summaryInfo.totalPeople}</p>\r\n          <p><strong>Média por Pessoa:</strong> R${summaryInfo.averagePerPerson}</p>\r\n          <div className=\"applied-filters\">\r\n            <h4>Filtros Aplicados:</h4>\r\n            <p><strong>Data Início:</strong> {dataInicio || 'Todos'}</p>\r\n            <p><strong>Data Fim:</strong> {dataFim || 'Todos'}</p>\r\n            <p><strong>Tipo:</strong> {selectedTipo === 'both' ? 'Ambos' : selectedTipo}</p>\r\n            <p><strong>Pessoas:</strong> {selectedPessoas.length > 0 ? selectedPessoas.join(', ') : 'Todas'}</p>\r\n            {Object.keys(tagFilters).map(cat => {\r\n              const chosenTags = tagFilters[cat] || [];\r\n              return (\r\n                <p key={cat}>\r\n                  <strong>{cat}:</strong> {chosenTags.length > 0 ? chosenTags.join(', ') : 'Todas'}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relatorio-results\">\r\n        <h3>Resultados ({flattenedRows.length})</h3>\r\n        {flattenedRows.length > 0 ? (\r\n          <table className=\"relatorio-table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Descrição (Pai)</th>\r\n                <th>Data (Pai)</th>\r\n                <th>Pessoa</th>\r\n                <th>Valor (Pagamento)</th>\r\n                <th>Tipo (Pai)</th>\r\n                <th>Tags</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {flattenedRows.map((row, idx) => {\r\n                const tr = row.transacao;\r\n                const p = row.pagamento;\r\n                // Pai tags\r\n                const paiTags = tr.tags || {};\r\n                // Pagamento tags\r\n                const pagTags = p && p.tags ? p.tags : {};\r\n\r\n                return (\r\n                  <tr key={idx}>\r\n                    <td>{tr.descricao}</td>\r\n                    <td>{new Date(tr.data).toLocaleDateString('pt-BR', { timeZone: 'UTC' })}</td>\r\n                    <td>{p ? p.pessoa : '—'}</td>\r\n                    <td>\r\n                      {p ? `R$${parseFloat(p.valor).toFixed(2)}` : `R$${parseFloat(tr.valor).toFixed(2)}`}\r\n                    </td>\r\n                    <td>{tr.tipo}</td>\r\n                    <td>\r\n                      {/* Exibe tags do pai */}\r\n                      {Object.keys(paiTags).map((catName, i) => (\r\n                        paiTags[catName].map((tagName, j) => (\r\n                          <span key={`pai-${i}-${j}`} className=\"tag-chip relatorio-tag-chip\">\r\n                            [Pai] {catName}: {tagName}\r\n                          </span>\r\n                        ))\r\n                      ))}\r\n                      {/* Exibe tags do pagamento */}\r\n                      {Object.keys(pagTags).map((catName, i) => (\r\n                        pagTags[catName].map((tagName, j) => (\r\n                          <span key={`pag-${i}-${j}`} className=\"tag-chip relatorio-tag-chip pag-tag-chip\">\r\n                            [Pag] {catName}: {tagName}\r\n                          </span>\r\n                        ))\r\n                      ))}\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        ) : (\r\n          <p>Nenhum registro encontrado.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Relatorio;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}